-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_E3 : STD_LOGIC_VECTOR (7 downto 0) := "11100011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_E1 : STD_LOGIC_VECTOR (7 downto 0) := "11100001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_E1 : STD_LOGIC_VECTOR (8 downto 0) := "011100001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";
    constant ap_const_lv9_1FD : STD_LOGIC_VECTOR (8 downto 0) := "111111101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv10_1C0 : STD_LOGIC_VECTOR (9 downto 0) := "0111000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv21_1171 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000101110001";
    constant ap_const_lv19_3A8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001110101000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond460_i_reg_1443 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1452 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1408 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1399 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal or_cond_i_reg_1486 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1486_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_285 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond461_i_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_306_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_V_reg_1394 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_424_0_not_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_424_0_not_reg_1403 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1413 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_468_1_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_468_1_reg_1417 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1421 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_assign_13_0_t_fu_506_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_0_t_reg_1428 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_1_t_fu_544_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_1_t_reg_1433 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_2_t_fu_582_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_2_t_reg_1438 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond460_i_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op147_read_state4 : BOOLEAN;
    signal ap_predicate_op158_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond460_i_reg_1443_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_598_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_740_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_reg_1456 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1461 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1468 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_addr_reg_1474 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_addr_reg_1480 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond_i_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1486_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal src_kernel_win_0_va_6_fu_888_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1490 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_906_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1496 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_924_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1502 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_52_1_1_fu_1280_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_52_1_1_reg_1508 : STD_LOGIC_VECTOR (20 downto 0);
    signal src_kernel_win_0_va_16_reg_1513 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_V_2_fu_1106_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_V_2_reg_1518 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1305_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp5_reg_1523 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_274 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_26_fu_749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_796_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_815_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_834_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_324_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_V_cast_fu_296_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_358_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_362_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_fu_374_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_400_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_s_fu_408_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_p2_i497_i_fu_414_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_fu_422_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_14_1_fu_438_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_assign_14_2_fu_464_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_432_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i496_i_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_cast_fu_368_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_p2_i497_i_p_assign_s_fu_490_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_fu_498_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_460_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_518_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_524_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_444_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_528_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_512_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_536_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_25_fu_486_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_fu_478_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_556_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_39_fu_562_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_fu_470_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_566_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_fu_550_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_574_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_40_fu_604_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_V_3_cast_fu_588_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ImagLoc_x_fu_620_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_fu_630_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_656_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_664_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_p2_i_i_fu_670_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_p2_i_i_cast_fu_682_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ImagLoc_x_cast_fu_626_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_assign_4_fu_692_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_assign_5_fu_698_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_not_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast6_fu_678_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sel_tmp_cast_fu_706_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fu_728_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_cast_fu_736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp1_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_6_t_fu_779_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_fu_784_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_803_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_822_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_877_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_895_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_913_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl1_fu_965_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl2_fu_977_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_cast_fu_973_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl2_cast_fu_985_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_52_0_1_fu_989_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_52_0_1_cast_fu_995_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1286_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl3_fu_1009_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl4_fu_1021_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_1017_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_cast_fu_1029_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_52_1_fu_1033_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_52_1_cast_fu_1039_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl5_fu_1047_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl6_fu_1058_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl5_cast_fu_1054_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl6_cast_fu_1065_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_52_1_2_fu_1069_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_52_1_2_cast_fu_1075_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_510_1_cast_fu_1043_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum_V_0_2_cast_fu_1006_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1297_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_510_1_2_cast_cas_fu_1079_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp4_cast_fu_1093_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp3_fu_1096_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp2_fu_1087_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp3_cast_fu_1102_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_shl_fu_1112_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl7_fu_1124_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_cast_fu_1120_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl7_cast_fu_1132_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_52_2_1_fu_1136_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_52_2_1_cast_fu_1142_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sum_V_2_cast_fu_1181_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp5_cast_fu_1184_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_s_fu_1187_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_46_fu_1203_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i_i_cast_fu_1211_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_1193_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_1221_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_47_fu_1237_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_1215_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_fu_1251_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_1_fu_1259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_52_1_1_fu_1280_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_52_1_1_fu_1280_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1286_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1286_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1286_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1286_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1297_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1297_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1305_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1305_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1305_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_111 : BOOLEAN;
    signal ap_enable_state3_pp0_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_137 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op152_store_state4 : BOOLEAN;
    signal ap_enable_operation_152 : BOOLEAN;
    signal ap_predicate_op159_store_state4 : BOOLEAN;
    signal ap_enable_operation_159 : BOOLEAN;
    signal ap_enable_operation_113 : BOOLEAN;
    signal ap_enable_operation_141 : BOOLEAN;
    signal ap_predicate_op150_store_state4 : BOOLEAN;
    signal ap_enable_operation_150 : BOOLEAN;
    signal ap_predicate_op157_store_state4 : BOOLEAN;
    signal ap_enable_operation_157 : BOOLEAN;
    signal ap_enable_operation_115 : BOOLEAN;
    signal ap_enable_operation_144 : BOOLEAN;
    signal ap_predicate_op148_store_state4 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_predicate_op156_store_state4 : BOOLEAN;
    signal ap_enable_operation_156 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1286_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1286_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1286_p30 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1297_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1305_p10 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1305_p20 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_52_1_1_fu_1280_p10 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_condition_992 : BOOLEAN;

    component image_filter_mux_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component image_filter_mul_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component image_filter_ama_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component image_filter_mac_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component image_filter_mac_lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component Filter2D_1_k_buf_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    image_filter_mux_hbi_U31 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_172,
        din1 => right_border_buf_0_1_fu_176,
        din2 => ap_const_lv8_0,
        din3 => col_assign_6_t_fu_779_p2,
        dout => tmp_28_fu_784_p5);

    image_filter_mux_hbi_U32 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_184,
        din1 => right_border_buf_0_4_fu_188,
        din2 => ap_const_lv8_0,
        din3 => col_assign_6_t_fu_779_p2,
        dout => tmp_30_fu_803_p5);

    image_filter_mux_hbi_U33 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_192,
        din1 => right_border_buf_0_2_fu_180,
        din2 => ap_const_lv8_0,
        din3 => col_assign_6_t_fu_779_p2,
        dout => tmp_31_fu_822_p5);

    image_filter_mux_hbi_U34 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_796_p3,
        din1 => col_buf_0_val_1_0_fu_815_p3,
        din2 => col_buf_0_val_2_0_fu_834_p3,
        din3 => row_assign_13_0_t_reg_1428,
        dout => tmp_32_fu_877_p5);

    image_filter_mux_hbi_U35 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_796_p3,
        din1 => col_buf_0_val_1_0_fu_815_p3,
        din2 => col_buf_0_val_2_0_fu_834_p3,
        din3 => row_assign_13_1_t_reg_1433,
        dout => tmp_33_fu_895_p5);

    image_filter_mux_hbi_U36 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_796_p3,
        din1 => col_buf_0_val_1_0_fu_815_p3,
        din2 => col_buf_0_val_2_0_fu_834_p3,
        din3 => row_assign_13_2_t_reg_1438,
        dout => tmp_34_fu_913_p5);

    image_filter_mul_ibs_U37 : component image_filter_mul_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 8,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_52_1_1_fu_1280_p0,
        din1 => r_V_52_1_1_fu_1280_p1,
        dout => r_V_52_1_1_fu_1280_p2);

    image_filter_ama_jbC_U38 : component image_filter_ama_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        din3_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1286_p0,
        din1 => grp_fu_1286_p1,
        din2 => grp_fu_1286_p2,
        din3 => grp_fu_1286_p3,
        dout => grp_fu_1286_p4);

    image_filter_mac_kbM_U39 : component image_filter_mac_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1297_p0,
        din1 => grp_fu_1297_p1,
        din2 => r_V_52_1_1_reg_1508,
        dout => grp_fu_1297_p3);

    image_filter_mac_lbW_U40 : component image_filter_mac_lbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1305_p0,
        din1 => grp_fu_1305_p1,
        din2 => grp_fu_1305_p2,
        dout => grp_fu_1305_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond460_i_fu_592_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond461_i_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((exitcond461_i_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_592_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_285 <= j_V_fu_598_p2;
            elsif (((exitcond461_i_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_285 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    t_V_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                t_V_reg_274 <= i_V_reg_1394;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_274 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_592_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1461 <= brmerge_fu_744_p2;
                k_buf_0_val_3_addr_reg_1468 <= tmp_26_fu_749_p1(8 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1474 <= tmp_26_fu_749_p1(8 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1480 <= tmp_26_fu_749_p1(8 - 1 downto 0);
                or_cond_i_i_reg_1452 <= or_cond_i_i_fu_650_p2;
                or_cond_i_reg_1486 <= or_cond_i_fu_756_p2;
                tmp_43_reg_1456 <= tmp_43_fu_740_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond460_i_reg_1443 <= exitcond460_i_fu_592_p2;
                exitcond460_i_reg_1443_pp0_iter1_reg <= exitcond460_i_reg_1443;
                or_cond_i_reg_1486_pp0_iter1_reg <= or_cond_i_reg_1486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1394 <= i_V_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond461_i_fu_300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1408 <= icmp_fu_334_p2;
                row_assign_13_0_t_reg_1428 <= row_assign_13_0_t_fu_506_p2;
                row_assign_13_1_t_reg_1433 <= row_assign_13_1_t_fu_544_p2;
                row_assign_13_2_t_reg_1438 <= row_assign_13_2_t_fu_582_p2;
                tmp_2_reg_1413 <= tmp_2_fu_340_p2;
                tmp_3_reg_1421 <= tmp_3_fu_352_p2;
                tmp_424_0_not_reg_1403 <= tmp_424_0_not_fu_318_p2;
                tmp_468_1_reg_1417 <= tmp_468_1_fu_346_p2;
                tmp_s_reg_1399 <= tmp_s_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                or_cond_i_reg_1486_pp0_iter2_reg <= or_cond_i_reg_1486_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1486 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_52_1_1_reg_1508 <= r_V_52_1_1_fu_1280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_176 <= right_border_buf_0_s_fu_172;
                right_border_buf_0_2_fu_180 <= right_border_buf_0_5_fu_192;
                right_border_buf_0_3_fu_184 <= col_buf_0_val_1_0_fu_815_p3;
                right_border_buf_0_4_fu_188 <= right_border_buf_0_3_fu_184;
                right_border_buf_0_5_fu_192 <= col_buf_0_val_2_0_fu_834_p3;
                right_border_buf_0_s_fu_172 <= col_buf_0_val_0_0_fu_796_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_reg_1513 <= src_kernel_win_0_va_2_fu_156;
                src_kernel_win_0_va_6_reg_1490 <= src_kernel_win_0_va_6_fu_888_p3;
                src_kernel_win_0_va_7_reg_1496 <= src_kernel_win_0_va_7_fu_906_p3;
                src_kernel_win_0_va_8_reg_1502 <= src_kernel_win_0_va_8_fu_924_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1443_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_152 <= src_kernel_win_0_va_fu_148;
                src_kernel_win_0_va_3_fu_160 <= src_kernel_win_0_va_16_reg_1513;
                src_kernel_win_0_va_4_fu_164 <= src_kernel_win_0_va_8_reg_1502;
                src_kernel_win_0_va_5_fu_168 <= src_kernel_win_0_va_4_fu_164;
                src_kernel_win_0_va_fu_148 <= src_kernel_win_0_va_6_reg_1490;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_2_fu_156 <= src_kernel_win_0_va_7_fu_906_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1486_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_2_reg_1518 <= sum_V_2_fu_1106_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1486_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp5_reg_1523 <= grp_fu_1305_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, exitcond461_i_fu_300_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond461_i_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        ImagLoc_x_cast_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_fu_620_p2),10));

    ImagLoc_x_fu_620_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(t_V_3_cast_fu_588_p1));
    Range1_all_zeros_fu_1231_p2 <= "1" when (tmp_35_fu_1221_p4 = ap_const_lv5_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, or_cond_i_reg_1486_pp0_iter2_reg, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1486_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, or_cond_i_reg_1486_pp0_iter2_reg, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1486_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, or_cond_i_reg_1486_pp0_iter2_reg, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1486_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter3_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1486_pp0_iter2_reg)
    begin
                ap_block_state6_pp0_stage0_iter3 <= ((or_cond_i_reg_1486_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_992_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond460_i_reg_1443, or_cond_i_i_reg_1452)
    begin
                ap_condition_992 <= ((or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond461_i_fu_300_p2, ap_CS_fsm_state2)
    begin
        if ((((exitcond461_i_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_111_assign_proc : process(exitcond460_i_fu_592_p2)
    begin
                ap_enable_operation_111 <= (exitcond460_i_fu_592_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_113_assign_proc : process(exitcond460_i_fu_592_p2)
    begin
                ap_enable_operation_113 <= (exitcond460_i_fu_592_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_115_assign_proc : process(exitcond460_i_fu_592_p2)
    begin
                ap_enable_operation_115 <= (exitcond460_i_fu_592_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_137_assign_proc : process(exitcond460_i_reg_1443)
    begin
                ap_enable_operation_137 <= (exitcond460_i_reg_1443 = ap_const_lv1_0);
    end process;


    ap_enable_operation_141_assign_proc : process(exitcond460_i_reg_1443)
    begin
                ap_enable_operation_141 <= (exitcond460_i_reg_1443 = ap_const_lv1_0);
    end process;


    ap_enable_operation_144_assign_proc : process(exitcond460_i_reg_1443)
    begin
                ap_enable_operation_144 <= (exitcond460_i_reg_1443 = ap_const_lv1_0);
    end process;


    ap_enable_operation_148_assign_proc : process(ap_predicate_op148_store_state4)
    begin
                ap_enable_operation_148 <= (ap_predicate_op148_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_150_assign_proc : process(ap_predicate_op150_store_state4)
    begin
                ap_enable_operation_150 <= (ap_predicate_op150_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_152_assign_proc : process(ap_predicate_op152_store_state4)
    begin
                ap_enable_operation_152 <= (ap_predicate_op152_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_156_assign_proc : process(ap_predicate_op156_store_state4)
    begin
                ap_enable_operation_156 <= (ap_predicate_op156_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_157_assign_proc : process(ap_predicate_op157_store_state4)
    begin
                ap_enable_operation_157 <= (ap_predicate_op157_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_159_assign_proc : process(ap_predicate_op159_store_state4)
    begin
                ap_enable_operation_159 <= (ap_predicate_op159_store_state4 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state3_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
                ap_enable_state3_pp0_iter0_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op147_read_state4_assign_proc : process(exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408)
    begin
                ap_predicate_op147_read_state4 <= ((or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0));
    end process;


    ap_predicate_op148_store_state4_assign_proc : process(exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_2_reg_1413)
    begin
                ap_predicate_op148_store_state4 <= ((tmp_2_reg_1413 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0));
    end process;


    ap_predicate_op150_store_state4_assign_proc : process(exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_468_1_reg_1417)
    begin
                ap_predicate_op150_store_state4 <= ((tmp_468_1_reg_1417 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0));
    end process;


    ap_predicate_op152_store_state4_assign_proc : process(exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_2_reg_1413)
    begin
                ap_predicate_op152_store_state4 <= ((tmp_2_reg_1413 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0));
    end process;


    ap_predicate_op156_store_state4_assign_proc : process(exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399)
    begin
                ap_predicate_op156_store_state4 <= ((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0));
    end process;


    ap_predicate_op157_store_state4_assign_proc : process(exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399)
    begin
                ap_predicate_op157_store_state4 <= ((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0));
    end process;


    ap_predicate_op158_read_state4_assign_proc : process(exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399)
    begin
                ap_predicate_op158_read_state4 <= ((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0));
    end process;


    ap_predicate_op159_store_state4_assign_proc : process(exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399)
    begin
                ap_predicate_op159_store_state4 <= ((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond461_i_fu_300_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond461_i_fu_300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_744_p2 <= (tmp_424_0_not_reg_1403 or tmp_22_fu_644_p2);
    col_assign_6_t_fu_779_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(tmp_43_reg_1456));
        col_assign_cast_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_fu_728_p3),32));

    col_buf_0_val_0_0_fu_796_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1461(0) = '1') else 
        tmp_28_fu_784_p5;
    col_buf_0_val_1_0_fu_815_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1461(0) = '1') else 
        tmp_30_fu_803_p5;
    col_buf_0_val_2_0_fu_834_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1461(0) = '1') else 
        tmp_31_fu_822_p5;
    deleted_zeros_fu_1265_p2 <= (not_carry_1_fu_1259_p2 and Range1_all_zeros_fu_1231_p2);
    exitcond460_i_fu_592_p2 <= "1" when (t_V_2_reg_285 = ap_const_lv8_E3) else "0";
    exitcond461_i_fu_300_p2 <= "1" when (t_V_reg_274 = ap_const_lv8_E3) else "0";
    grp_fu_1286_p0 <= grp_fu_1286_p00(8 - 1 downto 0);
    grp_fu_1286_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1502),9));
    grp_fu_1286_p1 <= grp_fu_1286_p10(8 - 1 downto 0);
    grp_fu_1286_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_168),9));
    grp_fu_1286_p2 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1286_p3 <= grp_fu_1286_p30(24 - 1 downto 0);
    grp_fu_1286_p30 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_52_0_1_cast_fu_995_p1),25));
    grp_fu_1297_p0 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1297_p1 <= grp_fu_1297_p10(8 - 1 downto 0);
    grp_fu_1297_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_152),19));
    grp_fu_1305_p0 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1305_p1 <= grp_fu_1305_p10(8 - 1 downto 0);
    grp_fu_1305_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1490),19));
    grp_fu_1305_p2 <= grp_fu_1305_p20(24 - 1 downto 0);
    grp_fu_1305_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_52_2_1_cast_fu_1142_p1),25));
    i_V_fu_306_p2 <= std_logic_vector(unsigned(t_V_reg_274) + unsigned(ap_const_lv8_1));
    icmp1_fu_614_p2 <= "0" when (tmp_40_fu_604_p4 = ap_const_lv7_0) else "1";
    icmp_fu_334_p2 <= "0" when (tmp_6_fu_324_p4 = ap_const_lv7_0) else "1";
    j_V_fu_598_p2 <= std_logic_vector(unsigned(t_V_2_reg_285) + unsigned(ap_const_lv8_1));
    k_buf_0_val_3_address0 <= tmp_26_fu_749_p1(8 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1468;

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399, tmp_2_reg_1413, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1413 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399, tmp_2_reg_1413, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1413 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_26_fu_749_p1(8 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1474;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399, tmp_468_1_reg_1417, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_468_1_reg_1417 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1408, tmp_s_reg_1399, tmp_468_1_reg_1417, k_buf_0_val_3_q0, ap_condition_992)
    begin
        if ((ap_const_boolean_1 = ap_condition_992)) then
            if (((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (((tmp_468_1_reg_1417 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399, tmp_468_1_reg_1417, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_468_1_reg_1417 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_26_fu_749_p1(8 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1480;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399, tmp_2_reg_1413, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1413 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1408, tmp_s_reg_1399, tmp_2_reg_1413, k_buf_0_val_4_q0, ap_condition_992)
    begin
        if ((ap_const_boolean_1 = ap_condition_992)) then
            if (((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (((tmp_2_reg_1413 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399, tmp_2_reg_1413, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1413 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_carry_1_fu_1259_p2 <= (tmp_48_fu_1251_p3 or rev2_fu_1245_p2);
    or_cond_i496_i_fu_394_p2 <= (tmp_7_fu_388_p2 and rev_fu_382_p2);
    or_cond_i_fu_756_p2 <= (icmp_reg_1408 and icmp1_fu_614_p2);
    or_cond_i_i_fu_650_p2 <= (tmp_22_fu_644_p2 and rev1_fu_638_p2);
    p_Val2_1_fu_1193_p4 <= p_Val2_s_fu_1187_p2(21 downto 14);
    p_Val2_2_fu_1215_p2 <= std_logic_vector(unsigned(tmp_6_i_i_cast_fu_1211_p1) + unsigned(p_Val2_1_fu_1193_p4));
    p_Val2_s_fu_1187_p2 <= std_logic_vector(unsigned(sum_V_2_cast_fu_1181_p1) + unsigned(tmp5_cast_fu_1184_p1));
    p_assign_14_1_fu_438_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) + signed(t_V_cast_fu_296_p1));
    p_assign_14_2_fu_464_p2 <= std_logic_vector(signed(ap_const_lv9_1FD) + signed(t_V_cast_fu_296_p1));
    p_assign_1_fu_432_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(tmp_12_fu_422_p1));
    p_assign_3_fu_664_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) - unsigned(t_V_3_cast_fu_588_p1));
    p_assign_4_fu_692_p2 <= std_logic_vector(unsigned(ap_const_lv10_1C0) - unsigned(p_p2_i_i_cast_fu_682_p1));
    p_assign_5_fu_698_p3 <= 
        ImagLoc_x_cast_fu_626_p1 when (or_cond_i_i_fu_650_p2(0) = '1') else 
        p_assign_4_fu_692_p2;
    p_assign_s_fu_408_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) - unsigned(t_V_cast_fu_296_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, or_cond_i_reg_1486_pp0_iter2_reg)
    begin
        if (((or_cond_i_reg_1486_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_Val2_2_fu_1215_p2 when (deleted_zeros_fu_1265_p2(0) = '1') else 
        ap_const_lv8_FF;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, or_cond_i_reg_1486_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1486_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_p2_i497_i_fu_414_p3 <= 
        p_assign_s_fu_408_p2 when (tmp_11_fu_400_p3(0) = '1') else 
        tmp_5_fu_362_p2;
    p_p2_i497_i_p_assign_s_fu_490_p3 <= 
        tmp_12_fu_422_p1 when (tmp_9_fu_426_p2(0) = '1') else 
        p_assign_1_fu_432_p2;
        p_p2_i_i_cast6_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_670_p3),11));

        p_p2_i_i_cast_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_670_p3),10));

    p_p2_i_i_fu_670_p3 <= 
        p_assign_3_fu_664_p2 when (tmp_42_fu_656_p3(0) = '1') else 
        ImagLoc_x_fu_620_p2;
    p_shl1_cast_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_965_p3),20));
    p_shl1_fu_965_p3 <= (src_kernel_win_0_va_4_fu_164 & ap_const_lv11_0);
    p_shl2_cast_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_977_p3),20));
    p_shl2_fu_977_p3 <= (src_kernel_win_0_va_4_fu_164 & ap_const_lv2_0);
    p_shl3_cast_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_1009_p3),20));
    p_shl3_fu_1009_p3 <= (src_kernel_win_0_va_3_fu_160 & ap_const_lv11_0);
    p_shl4_cast_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_1021_p3),20));
    p_shl4_fu_1021_p3 <= (src_kernel_win_0_va_3_fu_160 & ap_const_lv2_0);
    p_shl5_cast_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_1047_p3),20));
    p_shl5_fu_1047_p3 <= (src_kernel_win_0_va_7_reg_1496 & ap_const_lv11_0);
    p_shl6_cast_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl6_fu_1058_p3),20));
    p_shl6_fu_1058_p3 <= (src_kernel_win_0_va_7_reg_1496 & ap_const_lv2_0);
    p_shl7_cast_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl7_fu_1124_p3),20));
    p_shl7_fu_1124_p3 <= (src_kernel_win_0_va_fu_148 & ap_const_lv2_0);
    p_shl_cast_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_1112_p3),20));
    p_shl_fu_1112_p3 <= (src_kernel_win_0_va_fu_148 & ap_const_lv11_0);

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond460_i_reg_1443, or_cond_i_i_reg_1452, icmp_reg_1408, tmp_s_reg_1399)
    begin
        if ((((tmp_s_reg_1399 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_1) and (or_cond_i_i_reg_1452 = ap_const_lv1_1) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((or_cond_i_i_reg_1452 = ap_const_lv1_1) and (icmp_reg_1408 = ap_const_lv1_0) and (exitcond460_i_reg_1443 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op147_read_state4, ap_predicate_op158_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op158_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op147_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

        r_V_52_0_1_cast_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_52_0_1_fu_989_p2),24));

    r_V_52_0_1_fu_989_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_973_p1) - unsigned(p_shl2_cast_fu_985_p1));
    r_V_52_1_1_fu_1280_p0 <= ap_const_lv21_1171(14 - 1 downto 0);
    r_V_52_1_1_fu_1280_p1 <= r_V_52_1_1_fu_1280_p10(8 - 1 downto 0);
    r_V_52_1_1_fu_1280_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_2_fu_156),21));
        r_V_52_1_2_cast_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_52_1_2_fu_1069_p2),24));

    r_V_52_1_2_fu_1069_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1054_p1) - unsigned(p_shl6_cast_fu_1065_p1));
        r_V_52_1_cast_fu_1039_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_52_1_fu_1033_p2),24));

    r_V_52_1_fu_1033_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_1017_p1) - unsigned(p_shl4_cast_fu_1029_p1));
        r_V_52_2_1_cast_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_52_2_1_fu_1136_p2),24));

    r_V_52_2_1_fu_1136_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1120_p1) - unsigned(p_shl7_cast_fu_1132_p1));
    rev1_fu_638_p2 <= (tmp_41_fu_630_p3 xor ap_const_lv1_1);
    rev2_fu_1245_p2 <= (tmp_47_fu_1237_p3 xor ap_const_lv1_1);
    rev_fu_382_p2 <= (tmp_10_fu_374_p3 xor ap_const_lv1_1);
    row_assign_13_0_t_fu_506_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(y_fu_498_p3));
    row_assign_13_1_t_fu_544_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(tmp_13_fu_536_p3));
    row_assign_13_2_t_fu_582_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(tmp_18_fu_574_p3));
    sel_tmp7_fu_716_p2 <= (tmp_41_fu_630_p3 or tmp_26_not_fu_710_p2);
    sel_tmp8_fu_722_p2 <= (tmp_23_fu_686_p2 and sel_tmp7_fu_716_p2);
    sel_tmp_cast_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_assign_5_fu_698_p3),11));
    src_kernel_win_0_va_6_fu_888_p3 <= 
        tmp_32_fu_877_p5 when (tmp_3_reg_1421(0) = '1') else 
        col_buf_0_val_0_0_fu_796_p3;
    src_kernel_win_0_va_7_fu_906_p3 <= 
        tmp_33_fu_895_p5 when (tmp_3_reg_1421(0) = '1') else 
        col_buf_0_val_1_0_fu_815_p3;
    src_kernel_win_0_va_8_fu_924_p3 <= 
        tmp_34_fu_913_p5 when (tmp_3_reg_1421(0) = '1') else 
        col_buf_0_val_2_0_fu_834_p3;
    sum_V_0_2_cast_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1286_p4),26));
    sum_V_2_cast_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_V_2_reg_1518),27));
    sum_V_2_fu_1106_p2 <= std_logic_vector(unsigned(tmp2_fu_1087_p2) + unsigned(tmp3_cast_fu_1102_p1));
    t_V_3_cast_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_285),9));
    t_V_cast_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_274),9));
    tmp2_fu_1087_p2 <= std_logic_vector(unsigned(tmp_510_1_cast_fu_1043_p1) + unsigned(sum_V_0_2_cast_fu_1006_p1));
    tmp3_cast_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_1096_p2),26));
    tmp3_fu_1096_p2 <= std_logic_vector(unsigned(tmp_510_1_2_cast_cas_fu_1079_p1) + unsigned(tmp4_cast_fu_1093_p1));
    tmp4_cast_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1297_p3),25));
    tmp5_cast_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp5_reg_1523),27));
    tmp_10_fu_374_p3 <= tmp_5_fu_362_p2(8 downto 8);
    tmp_11_fu_400_p3 <= tmp_5_fu_362_p2(8 downto 8);
    tmp_12_fu_422_p1 <= p_p2_i497_i_fu_414_p3(2 - 1 downto 0);
    tmp_13_fu_536_p3 <= 
        tmp_4_fu_528_p3 when (tmp_14_fu_444_p3(0) = '1') else 
        tmp_1_fu_512_p2;
    tmp_14_fu_444_p3 <= p_assign_14_1_fu_438_p2(8 downto 8);
    tmp_15_fu_452_p3 <= p_assign_14_1_fu_438_p2(8 downto 8);
    tmp_16_fu_550_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_8_fu_358_p1));
    tmp_17_fu_566_p3 <= 
        tmp_38_fu_556_p2 when (tmp_24_fu_478_p3(0) = '1') else 
        tmp_39_fu_562_p1;
    tmp_18_fu_574_p3 <= 
        tmp_17_fu_566_p3 when (tmp_21_fu_470_p3(0) = '1') else 
        tmp_16_fu_550_p2;
    tmp_1_fu_512_p2 <= (tmp_8_fu_358_p1 xor ap_const_lv2_2);
    tmp_20_fu_460_p1 <= t_V_reg_274(2 - 1 downto 0);
    tmp_21_fu_470_p3 <= p_assign_14_2_fu_464_p2(8 downto 8);
    tmp_22_fu_644_p2 <= "1" when (signed(ImagLoc_x_fu_620_p2) < signed(ap_const_lv9_E1)) else "0";
    tmp_23_fu_686_p2 <= "1" when (signed(p_p2_i_i_fu_670_p3) < signed(ap_const_lv9_E1)) else "0";
    tmp_24_fu_478_p3 <= p_assign_14_2_fu_464_p2(8 downto 8);
    tmp_25_fu_486_p1 <= t_V_reg_274(2 - 1 downto 0);
    tmp_26_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_736_p1),64));
    tmp_26_not_fu_710_p2 <= (tmp_22_fu_644_p2 xor ap_const_lv1_1);
    tmp_27_fu_518_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_20_fu_460_p1));
    tmp_29_fu_524_p1 <= p_assign_14_1_fu_438_p2(2 - 1 downto 0);
    tmp_2_fu_340_p2 <= "1" when (t_V_reg_274 = ap_const_lv8_1) else "0";
    tmp_35_fu_1221_p4 <= p_Val2_s_fu_1187_p2(26 downto 22);
    tmp_38_fu_556_p2 <= (tmp_25_fu_486_p1 xor ap_const_lv2_3);
    tmp_39_fu_562_p1 <= p_assign_14_2_fu_464_p2(2 - 1 downto 0);
    tmp_3_fu_352_p2 <= "1" when (unsigned(t_V_reg_274) > unsigned(ap_const_lv8_E1)) else "0";
    tmp_40_fu_604_p4 <= t_V_2_reg_285(7 downto 1);
    tmp_41_fu_630_p3 <= ImagLoc_x_fu_620_p2(8 downto 8);
    tmp_424_0_not_fu_318_p2 <= (tmp_s_fu_312_p2 xor ap_const_lv1_1);
    tmp_42_fu_656_p3 <= ImagLoc_x_fu_620_p2(8 downto 8);
    tmp_43_fu_740_p1 <= x_fu_728_p3(2 - 1 downto 0);
    tmp_468_1_fu_346_p2 <= "1" when (t_V_reg_274 = ap_const_lv8_0) else "0";
    tmp_46_fu_1203_p3 <= p_Val2_s_fu_1187_p2(13 downto 13);
    tmp_47_fu_1237_p3 <= p_Val2_s_fu_1187_p2(21 downto 21);
    tmp_48_fu_1251_p3 <= p_Val2_2_fu_1215_p2(7 downto 7);
    tmp_4_fu_528_p3 <= 
        tmp_27_fu_518_p2 when (tmp_15_fu_452_p3(0) = '1') else 
        tmp_29_fu_524_p1;
    tmp_510_1_2_cast_cas_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_52_1_2_cast_fu_1075_p1),25));
    tmp_510_1_cast_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_52_1_cast_fu_1039_p1),26));
    tmp_5_fu_362_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(t_V_cast_fu_296_p1));
    tmp_6_fu_324_p4 <= t_V_reg_274(7 downto 1);
    tmp_6_i_i_cast_fu_1211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_1203_p3),8));
    tmp_72_cast_fu_368_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_8_fu_358_p1));
    tmp_7_fu_388_p2 <= "1" when (signed(tmp_5_fu_362_p2) < signed(ap_const_lv9_E1)) else "0";
    tmp_8_fu_358_p1 <= t_V_reg_274(2 - 1 downto 0);
    tmp_9_fu_426_p2 <= "1" when (signed(p_p2_i497_i_fu_414_p3) < signed(ap_const_lv9_E1)) else "0";
    tmp_s_fu_312_p2 <= "1" when (unsigned(t_V_reg_274) < unsigned(ap_const_lv8_E1)) else "0";
    x_fu_728_p3 <= 
        p_p2_i_i_cast6_fu_678_p1 when (sel_tmp8_fu_722_p2(0) = '1') else 
        sel_tmp_cast_fu_706_p1;
    y_fu_498_p3 <= 
        tmp_72_cast_fu_368_p2 when (or_cond_i496_i_fu_394_p2(0) = '1') else 
        p_p2_i497_i_p_assign_s_fu_490_p3;
end behav;
