// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1422;
reg   [0:0] or_cond_i_i_reg_1431;
reg   [0:0] icmp_reg_1387;
reg   [0:0] tmp_s_reg_1378;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] or_cond_i_reg_1465;
reg   [0:0] or_cond_i_reg_1465_pp0_iter2_reg;
reg   [7:0] t_V_2_reg_319;
wire  signed [9:0] tmp_369_0_1_cast_fu_330_p1;
reg  signed [9:0] tmp_369_0_1_cast_reg_1339;
wire  signed [9:0] tmp_369_0_2_cast_fu_334_p1;
reg  signed [9:0] tmp_369_0_2_cast_reg_1344;
wire  signed [10:0] tmp_369_1_cast_fu_338_p1;
reg  signed [10:0] tmp_369_1_cast_reg_1349;
wire   [11:0] tmp_369_1_2_cast_fu_342_p1;
reg   [11:0] tmp_369_1_2_cast_reg_1354;
wire  signed [9:0] tmp_369_2_cast_fu_346_p1;
reg  signed [9:0] tmp_369_2_cast_reg_1359;
wire   [10:0] tmp_369_2_1_cast_fu_350_p1;
reg   [10:0] tmp_369_2_1_cast_reg_1364;
wire   [0:0] exitcond461_i_fu_358_p2;
wire    ap_CS_fsm_state2;
wire   [7:0] i_V_fu_364_p2;
reg   [7:0] i_V_reg_1373;
wire   [0:0] tmp_s_fu_370_p2;
wire   [0:0] tmp_284_0_not_fu_376_p2;
reg   [0:0] tmp_284_0_not_reg_1382;
wire   [0:0] icmp_fu_392_p2;
wire   [0:0] tmp_2_fu_398_p2;
reg   [0:0] tmp_2_reg_1392;
wire   [0:0] tmp_328_1_fu_404_p2;
reg   [0:0] tmp_328_1_reg_1396;
wire   [0:0] tmp_3_fu_410_p2;
reg   [0:0] tmp_3_reg_1400;
wire   [1:0] row_assign_10_0_t_fu_564_p2;
reg   [1:0] row_assign_10_0_t_reg_1407;
wire   [1:0] row_assign_10_1_t_fu_602_p2;
reg   [1:0] row_assign_10_1_t_reg_1412;
wire   [1:0] row_assign_10_2_t_fu_640_p2;
reg   [1:0] row_assign_10_2_t_reg_1417;
wire   [0:0] exitcond460_i_fu_650_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op159_read_state4;
reg    ap_predicate_op170_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond460_i_reg_1422_pp0_iter1_reg;
wire   [7:0] j_V_fu_656_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_708_p2;
wire   [1:0] tmp_69_fu_798_p1;
reg   [1:0] tmp_69_reg_1435;
wire   [0:0] brmerge_fu_802_p2;
reg   [0:0] brmerge_reg_1440;
reg   [7:0] k_buf_0_val_3_addr_reg_1447;
reg   [7:0] k_buf_0_val_4_addr_reg_1453;
reg   [7:0] k_buf_0_val_5_addr_reg_1459;
wire   [0:0] or_cond_i_fu_814_p2;
reg   [0:0] or_cond_i_reg_1465_pp0_iter1_reg;
wire   [7:0] src_kernel_win_0_va_24_fu_964_p3;
reg   [7:0] src_kernel_win_0_va_24_reg_1469;
wire   [7:0] src_kernel_win_0_va_25_fu_982_p3;
reg   [7:0] src_kernel_win_0_va_25_reg_1475;
wire  signed [10:0] grp_fu_1248_p3;
reg  signed [10:0] sum_V_0_1_reg_1480;
wire   [7:0] tmp_75_fu_1028_p1;
reg   [7:0] tmp_75_reg_1485;
reg   [7:0] tmp_75_reg_1485_pp0_iter2_reg;
wire   [10:0] tmp4_fu_1059_p2;
reg   [10:0] tmp4_reg_1490;
wire   [7:0] tmp8_fu_1065_p2;
reg   [7:0] tmp8_reg_1495;
reg   [7:0] tmp8_reg_1495_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_1500;
wire   [7:0] tmp6_fu_1173_p2;
reg   [7:0] tmp6_reg_1506;
reg   [3:0] tmp_39_reg_1511;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state4;
wire   [7:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [7:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [7:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [7:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [7:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [7:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [7:0] t_V_reg_308;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_22_fu_807_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_146;
wire   [7:0] src_kernel_win_0_va_23_fu_946_p3;
reg   [7:0] src_kernel_win_0_va_18_fu_150;
reg   [7:0] src_kernel_win_0_va_19_fu_154;
reg   [7:0] src_kernel_win_0_va_20_fu_158;
reg   [7:0] src_kernel_win_0_va_21_fu_162;
reg   [7:0] src_kernel_win_0_va_22_fu_166;
reg   [7:0] right_border_buf_0_s_fu_170;
wire   [7:0] col_buf_0_val_0_0_fu_854_p3;
reg   [7:0] right_border_buf_0_14_fu_174;
reg   [7:0] right_border_buf_0_15_fu_178;
reg   [7:0] right_border_buf_0_16_fu_182;
wire   [7:0] col_buf_0_val_1_0_fu_873_p3;
reg   [7:0] right_border_buf_0_17_fu_186;
reg   [7:0] right_border_buf_0_18_fu_190;
wire   [7:0] col_buf_0_val_2_0_fu_892_p3;
wire   [6:0] tmp_51_fu_382_p4;
wire   [8:0] t_V_cast_fu_354_p1;
wire   [1:0] tmp_52_fu_416_p1;
wire   [8:0] tmp_7_fu_420_p2;
wire   [0:0] tmp_53_fu_432_p3;
wire   [0:0] tmp_10_fu_446_p2;
wire   [0:0] rev_fu_440_p2;
wire   [0:0] tmp_54_fu_458_p3;
wire   [8:0] p_assign_7_fu_466_p2;
wire   [8:0] p_p2_i497_i_fu_472_p3;
wire   [1:0] tmp_55_fu_480_p1;
wire   [8:0] p_assign_6_1_fu_496_p2;
wire   [8:0] p_assign_6_2_fu_522_p2;
wire   [0:0] tmp_13_fu_484_p2;
wire   [1:0] p_assign_8_fu_490_p2;
wire   [0:0] or_cond_i496_i_fu_452_p2;
wire   [1:0] tmp_42_cast_fu_426_p2;
wire   [1:0] p_p2_i497_i_p_assign_8_fu_548_p3;
wire   [1:0] y_fu_556_p3;
wire   [1:0] tmp_58_fu_518_p1;
wire   [0:0] tmp_57_fu_510_p3;
wire   [1:0] tmp_62_fu_576_p2;
wire   [1:0] tmp_63_fu_582_p1;
wire   [0:0] tmp_56_fu_502_p3;
wire   [1:0] tmp_36_fu_586_p3;
wire   [1:0] tmp_27_fu_570_p2;
wire   [1:0] tmp_29_fu_594_p3;
wire   [1:0] tmp_61_fu_544_p1;
wire   [0:0] tmp_60_fu_536_p3;
wire   [1:0] tmp_64_fu_614_p2;
wire   [1:0] tmp_65_fu_620_p1;
wire   [0:0] tmp_59_fu_528_p3;
wire   [1:0] tmp_37_fu_624_p3;
wire   [1:0] tmp_31_fu_608_p2;
wire   [1:0] tmp_33_fu_632_p3;
wire   [6:0] tmp_66_fu_662_p4;
wire   [8:0] t_V_2_cast_fu_646_p1;
wire  signed [8:0] ImagLoc_x_fu_678_p2;
wire   [0:0] tmp_67_fu_688_p3;
wire   [0:0] tmp_18_fu_702_p2;
wire   [0:0] rev3_fu_696_p2;
wire   [0:0] tmp_68_fu_714_p3;
wire   [8:0] p_assign_1_fu_722_p2;
wire  signed [8:0] p_p2_i_i_fu_728_p3;
wire  signed [9:0] p_p2_i_i_cast_fu_740_p1;
wire  signed [9:0] ImagLoc_x_cast_fu_684_p1;
wire   [9:0] p_assign_2_fu_750_p2;
wire   [9:0] p_assign_3_fu_756_p3;
wire   [0:0] tmp_18_not_fu_768_p2;
wire   [0:0] tmp_20_fu_744_p2;
wire   [0:0] sel_tmp7_fu_774_p2;
wire   [0:0] sel_tmp8_fu_780_p2;
wire  signed [10:0] p_p2_i_i_cast1_fu_736_p1;
wire   [10:0] sel_tmp_cast_fu_764_p1;
wire  signed [10:0] x_fu_786_p3;
wire  signed [31:0] col_assign_cast_fu_794_p1;
wire   [0:0] icmp2_fu_672_p2;
wire   [1:0] col_assign_3_t_fu_837_p2;
wire   [7:0] tmp_23_fu_842_p5;
wire   [7:0] tmp_24_fu_861_p5;
wire   [7:0] tmp_25_fu_880_p5;
wire   [7:0] tmp_26_fu_935_p5;
wire   [7:0] tmp_30_fu_953_p5;
wire   [7:0] tmp_34_fu_971_p5;
wire   [8:0] r_V_0_cast_fu_1001_p1;
wire  signed [8:0] r_V_s_fu_1005_p2;
wire  signed [1:0] r_V_50_2_fu_1023_p0;
wire   [7:0] r_V_50_2_fu_1023_p1;
wire   [9:0] r_V_50_2_fu_1023_p2;
wire   [2:0] r_V_50_2_1_fu_1036_p0;
wire   [7:0] r_V_50_2_1_fu_1036_p1;
wire   [10:0] r_V_50_2_1_fu_1036_p2;
wire   [9:0] tmp_370_2_2_cast_cas_fu_1045_p1;
wire   [9:0] tmp5_fu_1049_p2;
wire  signed [10:0] tmp5_cast_fu_1055_p1;
wire   [7:0] tmp_76_fu_1041_p1;
wire  signed [10:0] grp_fu_1255_p3;
wire  signed [2:0] r_V_50_1_fu_1110_p0;
wire   [7:0] r_V_50_1_fu_1110_p1;
wire  signed [10:0] r_V_50_1_fu_1110_p2;
wire  signed [11:0] tmp_370_1_cast_cast_fu_1115_p1;
wire  signed [11:0] sum_V_0_2_cast_fu_1103_p1;
wire   [3:0] r_V_50_1_2_fu_1135_p0;
wire   [7:0] r_V_50_1_2_fu_1135_p1;
wire   [11:0] r_V_50_1_2_fu_1135_p2;
wire   [7:0] tmp_73_fu_1123_p1;
wire   [7:0] tmp_72_fu_1119_p1;
wire   [11:0] sum_V_1_1_fu_1126_p2;
wire   [11:0] tmp3_fu_1150_p2;
wire  signed [11:0] tmp4_cast_fu_1156_p1;
wire   [11:0] p_Val2_s_fu_1159_p2;
wire   [7:0] tmp_38_fu_1144_p2;
wire   [7:0] tmp_74_fu_1140_p1;
wire   [7:0] tmp7_fu_1201_p2;
wire   [0:0] not_i_i_fu_1215_p2;
wire   [0:0] tmp_i_i_fu_1210_p2;
wire   [0:0] overflow_fu_1220_p2;
wire   [0:0] tmp_1_i_i_fu_1234_p2;
wire   [7:0] p_mux_i_i_cast_fu_1226_p3;
wire   [7:0] p_Val2_1_fu_1205_p2;
wire  signed [1:0] grp_fu_1248_p0;
wire   [7:0] grp_fu_1248_p1;
wire  signed [1:0] grp_fu_1255_p0;
wire   [7:0] grp_fu_1255_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_123;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_enable_operation_149;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op164_store_state4;
reg    ap_enable_operation_164;
reg    ap_predicate_op171_store_state4;
reg    ap_enable_operation_171;
reg    ap_enable_operation_125;
reg    ap_enable_operation_153;
reg    ap_predicate_op162_store_state4;
reg    ap_enable_operation_162;
reg    ap_predicate_op169_store_state4;
reg    ap_enable_operation_169;
reg    ap_enable_operation_127;
reg    ap_enable_operation_156;
reg    ap_predicate_op160_store_state4;
reg    ap_enable_operation_160;
reg    ap_predicate_op168_store_state4;
reg    ap_enable_operation_168;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1248_p10;
wire   [9:0] grp_fu_1255_p10;
wire   [11:0] r_V_50_1_2_fu_1135_p10;
wire   [10:0] r_V_50_1_fu_1110_p10;
wire   [10:0] r_V_50_2_1_fu_1036_p10;
wire   [9:0] r_V_50_2_fu_1023_p10;
reg    ap_condition_969;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 225 ),
    .AddressWidth( 8 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U54(
    .din0(right_border_buf_0_s_fu_170),
    .din1(right_border_buf_0_14_fu_174),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_837_p2),
    .dout(tmp_23_fu_842_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U55(
    .din0(right_border_buf_0_16_fu_182),
    .din1(right_border_buf_0_17_fu_186),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_837_p2),
    .dout(tmp_24_fu_861_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U56(
    .din0(right_border_buf_0_18_fu_190),
    .din1(right_border_buf_0_15_fu_178),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_837_p2),
    .dout(tmp_25_fu_880_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U57(
    .din0(col_buf_0_val_0_0_fu_854_p3),
    .din1(col_buf_0_val_1_0_fu_873_p3),
    .din2(col_buf_0_val_2_0_fu_892_p3),
    .din3(row_assign_10_0_t_reg_1407),
    .dout(tmp_26_fu_935_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U58(
    .din0(col_buf_0_val_0_0_fu_854_p3),
    .din1(col_buf_0_val_1_0_fu_873_p3),
    .din2(col_buf_0_val_2_0_fu_892_p3),
    .din3(row_assign_10_1_t_reg_1412),
    .dout(tmp_30_fu_953_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U59(
    .din0(col_buf_0_val_0_0_fu_854_p3),
    .din1(col_buf_0_val_1_0_fu_873_p3),
    .din2(col_buf_0_val_2_0_fu_892_p3),
    .din3(row_assign_10_2_t_reg_1417),
    .dout(tmp_34_fu_971_p5)
);

image_filter_mac_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
image_filter_mac_pcA_U60(
    .din0(grp_fu_1248_p0),
    .din1(grp_fu_1248_p1),
    .din2(r_V_s_fu_1005_p2),
    .dout(grp_fu_1248_p3)
);

image_filter_mac_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
image_filter_mac_qcK_U61(
    .din0(grp_fu_1255_p0),
    .din1(grp_fu_1255_p1),
    .din2(sum_V_0_1_reg_1480),
    .dout(grp_fu_1255_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_650_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond461_i_fu_358_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((exitcond461_i_fu_358_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_650_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_319 <= j_V_fu_656_p2;
    end else if (((exitcond461_i_fu_358_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_319 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        t_V_reg_308 <= i_V_reg_1373;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_308 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_650_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1440 <= brmerge_fu_802_p2;
        k_buf_0_val_3_addr_reg_1447 <= tmp_22_fu_807_p1;
        k_buf_0_val_4_addr_reg_1453 <= tmp_22_fu_807_p1;
        k_buf_0_val_5_addr_reg_1459 <= tmp_22_fu_807_p1;
        or_cond_i_i_reg_1431 <= or_cond_i_i_fu_708_p2;
        or_cond_i_reg_1465 <= or_cond_i_fu_814_p2;
        tmp_69_reg_1435 <= tmp_69_fu_798_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond460_i_reg_1422 <= exitcond460_i_fu_650_p2;
        exitcond460_i_reg_1422_pp0_iter1_reg <= exitcond460_i_reg_1422;
        or_cond_i_reg_1465_pp0_iter1_reg <= or_cond_i_reg_1465;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1373 <= i_V_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_358_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1387 <= icmp_fu_392_p2;
        row_assign_10_0_t_reg_1407 <= row_assign_10_0_t_fu_564_p2;
        row_assign_10_1_t_reg_1412 <= row_assign_10_1_t_fu_602_p2;
        row_assign_10_2_t_reg_1417 <= row_assign_10_2_t_fu_640_p2;
        tmp_284_0_not_reg_1382 <= tmp_284_0_not_fu_376_p2;
        tmp_2_reg_1392 <= tmp_2_fu_398_p2;
        tmp_328_1_reg_1396 <= tmp_328_1_fu_404_p2;
        tmp_3_reg_1400 <= tmp_3_fu_410_p2;
        tmp_s_reg_1378 <= tmp_s_fu_370_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        or_cond_i_reg_1465_pp0_iter2_reg <= or_cond_i_reg_1465_pp0_iter1_reg;
        tmp8_reg_1495_pp0_iter2_reg <= tmp8_reg_1495;
        tmp_75_reg_1485_pp0_iter2_reg <= tmp_75_reg_1485;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1465_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_s_reg_1500 <= p_Val2_s_fu_1159_p2[32'd11];
        tmp6_reg_1506 <= tmp6_fu_1173_p2;
        tmp_39_reg_1511 <= {{p_Val2_s_fu_1159_p2[11:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_14_fu_174 <= right_border_buf_0_s_fu_170;
        right_border_buf_0_15_fu_178 <= right_border_buf_0_18_fu_190;
        right_border_buf_0_16_fu_182 <= col_buf_0_val_1_0_fu_873_p3;
        right_border_buf_0_17_fu_186 <= right_border_buf_0_16_fu_182;
        right_border_buf_0_18_fu_190 <= col_buf_0_val_2_0_fu_892_p3;
        right_border_buf_0_s_fu_170 <= col_buf_0_val_0_0_fu_854_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_18_fu_150 <= src_kernel_win_0_va_fu_146;
        src_kernel_win_0_va_21_fu_162 <= src_kernel_win_0_va_25_fu_982_p3;
        src_kernel_win_0_va_22_fu_166 <= src_kernel_win_0_va_21_fu_162;
        src_kernel_win_0_va_fu_146 <= src_kernel_win_0_va_23_fu_946_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1422_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_19_fu_154 <= src_kernel_win_0_va_24_reg_1469;
        src_kernel_win_0_va_20_fu_158 <= src_kernel_win_0_va_19_fu_154;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1422 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_24_reg_1469 <= src_kernel_win_0_va_24_fu_964_p3;
        src_kernel_win_0_va_25_reg_1475 <= src_kernel_win_0_va_25_fu_982_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1465 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_V_0_1_reg_1480 <= grp_fu_1248_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1465 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp4_reg_1490 <= tmp4_fu_1059_p2;
        tmp8_reg_1495 <= tmp8_fu_1065_p2;
        tmp_75_reg_1485 <= tmp_75_fu_1028_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_369_0_1_cast_reg_1339 <= tmp_369_0_1_cast_fu_330_p1;
        tmp_369_0_2_cast_reg_1344 <= tmp_369_0_2_cast_fu_334_p1;
        tmp_369_1_2_cast_reg_1354[3 : 0] <= tmp_369_1_2_cast_fu_342_p1[3 : 0];
        tmp_369_1_cast_reg_1349 <= tmp_369_1_cast_fu_338_p1;
        tmp_369_2_1_cast_reg_1364[2 : 0] <= tmp_369_2_1_cast_fu_350_p1[2 : 0];
        tmp_369_2_cast_reg_1359 <= tmp_369_2_cast_fu_346_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond461_i_fu_358_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_358_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_328_1_reg_1396 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_969)) begin
        if (((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((tmp_328_1_reg_1396 == 1'd1) & (icmp_reg_1387 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_328_1_reg_1396 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_969)) begin
        if (((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((tmp_2_reg_1392 == 1'd1) & (icmp_reg_1387 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1465_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1465_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op170_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op159_read_state4 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_358_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_fu_684_p1 = ImagLoc_x_fu_678_p2;

assign ImagLoc_x_fu_678_p2 = ($signed(9'd511) + $signed(t_V_2_cast_fu_646_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1465_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1465_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1465_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op170_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op159_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter3 = ((or_cond_i_reg_1465_pp0_iter2_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_969 = ((or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_123 = (exitcond460_i_fu_650_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_125 = (exitcond460_i_fu_650_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_127 = (exitcond460_i_fu_650_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_149 = (exitcond460_i_reg_1422 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_153 = (exitcond460_i_reg_1422 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_156 = (exitcond460_i_reg_1422 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_160 = (ap_predicate_op160_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_162 = (ap_predicate_op162_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_164 = (ap_predicate_op164_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_168 = (ap_predicate_op168_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_169 = (ap_predicate_op169_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_171 = (ap_predicate_op171_store_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op159_read_state4 = ((or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0));
end

always @ (*) begin
    ap_predicate_op160_store_state4 = ((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0));
end

always @ (*) begin
    ap_predicate_op162_store_state4 = ((tmp_328_1_reg_1396 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_store_state4 = ((tmp_2_reg_1392 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (icmp_reg_1387 == 1'd0) & (exitcond460_i_reg_1422 == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_store_state4 = ((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_store_state4 = ((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_read_state4 = ((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0));
end

always @ (*) begin
    ap_predicate_op171_store_state4 = ((tmp_s_reg_1378 == 1'd1) & (icmp_reg_1387 == 1'd1) & (or_cond_i_i_reg_1431 == 1'd1) & (exitcond460_i_reg_1422 == 1'd0));
end

assign brmerge_fu_802_p2 = (tmp_284_0_not_reg_1382 | tmp_18_fu_702_p2);

assign col_assign_3_t_fu_837_p2 = (2'd0 - tmp_69_reg_1435);

assign col_assign_cast_fu_794_p1 = x_fu_786_p3;

assign col_buf_0_val_0_0_fu_854_p3 = ((brmerge_reg_1440[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_23_fu_842_p5);

assign col_buf_0_val_1_0_fu_873_p3 = ((brmerge_reg_1440[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_24_fu_861_p5);

assign col_buf_0_val_2_0_fu_892_p3 = ((brmerge_reg_1440[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_25_fu_880_p5);

assign exitcond460_i_fu_650_p2 = ((t_V_2_reg_319 == 8'd227) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_358_p2 = ((t_V_reg_308 == 8'd227) ? 1'b1 : 1'b0);

assign grp_fu_1248_p0 = tmp_369_0_1_cast_reg_1339;

assign grp_fu_1248_p1 = grp_fu_1248_p10;

assign grp_fu_1248_p10 = src_kernel_win_0_va_21_fu_162;

assign grp_fu_1255_p0 = tmp_369_0_2_cast_reg_1344;

assign grp_fu_1255_p1 = grp_fu_1255_p10;

assign grp_fu_1255_p10 = src_kernel_win_0_va_25_reg_1475;

assign i_V_fu_364_p2 = (t_V_reg_308 + 8'd1);

assign icmp2_fu_672_p2 = ((tmp_66_fu_662_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_392_p2 = ((tmp_51_fu_382_p4 != 7'd0) ? 1'b1 : 1'b0);

assign j_V_fu_656_p2 = (t_V_2_reg_319 + 8'd1);

assign k_buf_0_val_3_address0 = tmp_22_fu_807_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1447;

assign k_buf_0_val_4_address0 = tmp_22_fu_807_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1453;

assign k_buf_0_val_5_address0 = tmp_22_fu_807_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1459;

assign not_i_i_fu_1215_p2 = ((tmp_39_reg_1511 != 4'd0) ? 1'b1 : 1'b0);

assign or_cond_i496_i_fu_452_p2 = (tmp_10_fu_446_p2 & rev_fu_440_p2);

assign or_cond_i_fu_814_p2 = (icmp_reg_1387 & icmp2_fu_672_p2);

assign or_cond_i_i_fu_708_p2 = (tmp_18_fu_702_p2 & rev3_fu_696_p2);

assign overflow_fu_1220_p2 = (tmp_i_i_fu_1210_p2 & not_i_i_fu_1215_p2);

assign p_Val2_1_fu_1205_p2 = (tmp6_reg_1506 + tmp7_fu_1201_p2);

assign p_Val2_s_fu_1159_p2 = ($signed(tmp3_fu_1150_p2) + $signed(tmp4_cast_fu_1156_p1));

assign p_assign_1_fu_722_p2 = (9'd1 - t_V_2_cast_fu_646_p1);

assign p_assign_2_fu_750_p2 = ($signed(10'd448) - $signed(p_p2_i_i_cast_fu_740_p1));

assign p_assign_3_fu_756_p3 = ((or_cond_i_i_fu_708_p2[0:0] === 1'b1) ? ImagLoc_x_cast_fu_684_p1 : p_assign_2_fu_750_p2);

assign p_assign_6_1_fu_496_p2 = ($signed(9'd510) + $signed(t_V_cast_fu_354_p1));

assign p_assign_6_2_fu_522_p2 = ($signed(9'd509) + $signed(t_V_cast_fu_354_p1));

assign p_assign_7_fu_466_p2 = (9'd1 - t_V_cast_fu_354_p1);

assign p_assign_8_fu_490_p2 = (2'd0 - tmp_55_fu_480_p1);

assign p_dst_data_stream_V_din = ((tmp_1_i_i_fu_1234_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1226_p3 : p_Val2_1_fu_1205_p2);

assign p_mux_i_i_cast_fu_1226_p3 = ((tmp_i_i_fu_1210_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i497_i_fu_472_p3 = ((tmp_54_fu_458_p3[0:0] === 1'b1) ? p_assign_7_fu_466_p2 : tmp_7_fu_420_p2);

assign p_p2_i497_i_p_assign_8_fu_548_p3 = ((tmp_13_fu_484_p2[0:0] === 1'b1) ? tmp_55_fu_480_p1 : p_assign_8_fu_490_p2);

assign p_p2_i_i_cast1_fu_736_p1 = p_p2_i_i_fu_728_p3;

assign p_p2_i_i_cast_fu_740_p1 = p_p2_i_i_fu_728_p3;

assign p_p2_i_i_fu_728_p3 = ((tmp_68_fu_714_p3[0:0] === 1'b1) ? p_assign_1_fu_722_p2 : ImagLoc_x_fu_678_p2);

assign r_V_0_cast_fu_1001_p1 = src_kernel_win_0_va_22_fu_166;

assign r_V_50_1_2_fu_1135_p0 = tmp_369_1_2_cast_reg_1354;

assign r_V_50_1_2_fu_1135_p1 = r_V_50_1_2_fu_1135_p10;

assign r_V_50_1_2_fu_1135_p10 = src_kernel_win_0_va_24_reg_1469;

assign r_V_50_1_2_fu_1135_p2 = (r_V_50_1_2_fu_1135_p0 * r_V_50_1_2_fu_1135_p1);

assign r_V_50_1_fu_1110_p0 = tmp_369_1_cast_reg_1349;

assign r_V_50_1_fu_1110_p1 = r_V_50_1_fu_1110_p10;

assign r_V_50_1_fu_1110_p10 = src_kernel_win_0_va_20_fu_158;

assign r_V_50_1_fu_1110_p2 = ($signed(r_V_50_1_fu_1110_p0) * $signed({{1'b0}, {r_V_50_1_fu_1110_p1}}));

assign r_V_50_2_1_fu_1036_p0 = tmp_369_2_1_cast_reg_1364;

assign r_V_50_2_1_fu_1036_p1 = r_V_50_2_1_fu_1036_p10;

assign r_V_50_2_1_fu_1036_p10 = src_kernel_win_0_va_fu_146;

assign r_V_50_2_1_fu_1036_p2 = (r_V_50_2_1_fu_1036_p0 * r_V_50_2_1_fu_1036_p1);

assign r_V_50_2_fu_1023_p0 = tmp_369_2_cast_reg_1359;

assign r_V_50_2_fu_1023_p1 = r_V_50_2_fu_1023_p10;

assign r_V_50_2_fu_1023_p10 = src_kernel_win_0_va_18_fu_150;

assign r_V_50_2_fu_1023_p2 = ($signed(r_V_50_2_fu_1023_p0) * $signed({{1'b0}, {r_V_50_2_fu_1023_p1}}));

assign r_V_s_fu_1005_p2 = (9'd0 - r_V_0_cast_fu_1001_p1);

assign rev3_fu_696_p2 = (tmp_67_fu_688_p3 ^ 1'd1);

assign rev_fu_440_p2 = (tmp_53_fu_432_p3 ^ 1'd1);

assign row_assign_10_0_t_fu_564_p2 = (2'd0 - y_fu_556_p3);

assign row_assign_10_1_t_fu_602_p2 = (2'd0 - tmp_29_fu_594_p3);

assign row_assign_10_2_t_fu_640_p2 = (2'd0 - tmp_33_fu_632_p3);

assign sel_tmp7_fu_774_p2 = (tmp_67_fu_688_p3 | tmp_18_not_fu_768_p2);

assign sel_tmp8_fu_780_p2 = (tmp_20_fu_744_p2 & sel_tmp7_fu_774_p2);

assign sel_tmp_cast_fu_764_p1 = p_assign_3_fu_756_p3;

assign src_kernel_win_0_va_23_fu_946_p3 = ((tmp_3_reg_1400[0:0] === 1'b1) ? tmp_26_fu_935_p5 : col_buf_0_val_0_0_fu_854_p3);

assign src_kernel_win_0_va_24_fu_964_p3 = ((tmp_3_reg_1400[0:0] === 1'b1) ? tmp_30_fu_953_p5 : col_buf_0_val_1_0_fu_873_p3);

assign src_kernel_win_0_va_25_fu_982_p3 = ((tmp_3_reg_1400[0:0] === 1'b1) ? tmp_34_fu_971_p5 : col_buf_0_val_2_0_fu_892_p3);

assign sum_V_0_2_cast_fu_1103_p1 = grp_fu_1255_p3;

assign sum_V_1_1_fu_1126_p2 = ($signed(tmp_370_1_cast_cast_fu_1115_p1) + $signed(sum_V_0_2_cast_fu_1103_p1));

assign t_V_2_cast_fu_646_p1 = t_V_2_reg_319;

assign t_V_cast_fu_354_p1 = t_V_reg_308;

assign tmp3_fu_1150_p2 = (r_V_50_1_2_fu_1135_p2 + sum_V_1_1_fu_1126_p2);

assign tmp4_cast_fu_1156_p1 = $signed(tmp4_reg_1490);

assign tmp4_fu_1059_p2 = ($signed(r_V_50_2_1_fu_1036_p2) + $signed(tmp5_cast_fu_1055_p1));

assign tmp5_cast_fu_1055_p1 = $signed(tmp5_fu_1049_p2);

assign tmp5_fu_1049_p2 = (tmp_370_2_2_cast_cas_fu_1045_p1 + r_V_50_2_fu_1023_p2);

assign tmp6_fu_1173_p2 = (tmp_38_fu_1144_p2 + tmp_74_fu_1140_p1);

assign tmp7_fu_1201_p2 = (tmp_75_reg_1485_pp0_iter2_reg + tmp8_reg_1495_pp0_iter2_reg);

assign tmp8_fu_1065_p2 = (src_kernel_win_0_va_23_fu_946_p3 + tmp_76_fu_1041_p1);

assign tmp_10_fu_446_p2 = (($signed(tmp_7_fu_420_p2) < $signed(9'd225)) ? 1'b1 : 1'b0);

assign tmp_13_fu_484_p2 = (($signed(p_p2_i497_i_fu_472_p3) < $signed(9'd225)) ? 1'b1 : 1'b0);

assign tmp_18_fu_702_p2 = (($signed(ImagLoc_x_fu_678_p2) < $signed(9'd225)) ? 1'b1 : 1'b0);

assign tmp_18_not_fu_768_p2 = (tmp_18_fu_702_p2 ^ 1'd1);

assign tmp_1_i_i_fu_1234_p2 = (p_Result_s_reg_1500 | overflow_fu_1220_p2);

assign tmp_20_fu_744_p2 = (($signed(p_p2_i_i_fu_728_p3) < $signed(9'd225)) ? 1'b1 : 1'b0);

assign tmp_22_fu_807_p1 = $unsigned(col_assign_cast_fu_794_p1);

assign tmp_27_fu_570_p2 = (tmp_52_fu_416_p1 ^ 2'd2);

assign tmp_284_0_not_fu_376_p2 = (tmp_s_fu_370_p2 ^ 1'd1);

assign tmp_29_fu_594_p3 = ((tmp_56_fu_502_p3[0:0] === 1'b1) ? tmp_36_fu_586_p3 : tmp_27_fu_570_p2);

assign tmp_2_fu_398_p2 = ((t_V_reg_308 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_31_fu_608_p2 = (2'd1 + tmp_52_fu_416_p1);

assign tmp_328_1_fu_404_p2 = ((t_V_reg_308 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_33_fu_632_p3 = ((tmp_59_fu_528_p3[0:0] === 1'b1) ? tmp_37_fu_624_p3 : tmp_31_fu_608_p2);

assign tmp_369_0_1_cast_fu_330_p1 = $signed(p_kernel_val_0_V_1_read);

assign tmp_369_0_2_cast_fu_334_p1 = $signed(p_kernel_val_0_V_2_read);

assign tmp_369_1_2_cast_fu_342_p1 = p_kernel_val_1_V_2_read;

assign tmp_369_1_cast_fu_338_p1 = $signed(p_kernel_val_1_V_0_read);

assign tmp_369_2_1_cast_fu_350_p1 = p_kernel_val_2_V_1_read;

assign tmp_369_2_cast_fu_346_p1 = $signed(p_kernel_val_2_V_0_read);

assign tmp_36_fu_586_p3 = ((tmp_57_fu_510_p3[0:0] === 1'b1) ? tmp_62_fu_576_p2 : tmp_63_fu_582_p1);

assign tmp_370_1_cast_cast_fu_1115_p1 = r_V_50_1_fu_1110_p2;

assign tmp_370_2_2_cast_cas_fu_1045_p1 = src_kernel_win_0_va_23_fu_946_p3;

assign tmp_37_fu_624_p3 = ((tmp_60_fu_536_p3[0:0] === 1'b1) ? tmp_64_fu_614_p2 : tmp_65_fu_620_p1);

assign tmp_38_fu_1144_p2 = (tmp_73_fu_1123_p1 + tmp_72_fu_1119_p1);

assign tmp_3_fu_410_p2 = ((t_V_reg_308 > 8'd225) ? 1'b1 : 1'b0);

assign tmp_42_cast_fu_426_p2 = ($signed(2'd3) + $signed(tmp_52_fu_416_p1));

assign tmp_51_fu_382_p4 = {{t_V_reg_308[7:1]}};

assign tmp_52_fu_416_p1 = t_V_reg_308[1:0];

assign tmp_53_fu_432_p3 = tmp_7_fu_420_p2[32'd8];

assign tmp_54_fu_458_p3 = tmp_7_fu_420_p2[32'd8];

assign tmp_55_fu_480_p1 = p_p2_i497_i_fu_472_p3[1:0];

assign tmp_56_fu_502_p3 = p_assign_6_1_fu_496_p2[32'd8];

assign tmp_57_fu_510_p3 = p_assign_6_1_fu_496_p2[32'd8];

assign tmp_58_fu_518_p1 = t_V_reg_308[1:0];

assign tmp_59_fu_528_p3 = p_assign_6_2_fu_522_p2[32'd8];

assign tmp_60_fu_536_p3 = p_assign_6_2_fu_522_p2[32'd8];

assign tmp_61_fu_544_p1 = t_V_reg_308[1:0];

assign tmp_62_fu_576_p2 = ($signed(2'd2) - $signed(tmp_58_fu_518_p1));

assign tmp_63_fu_582_p1 = p_assign_6_1_fu_496_p2[1:0];

assign tmp_64_fu_614_p2 = (tmp_61_fu_544_p1 ^ 2'd3);

assign tmp_65_fu_620_p1 = p_assign_6_2_fu_522_p2[1:0];

assign tmp_66_fu_662_p4 = {{t_V_2_reg_319[7:1]}};

assign tmp_67_fu_688_p3 = ImagLoc_x_fu_678_p2[32'd8];

assign tmp_68_fu_714_p3 = ImagLoc_x_fu_678_p2[32'd8];

assign tmp_69_fu_798_p1 = x_fu_786_p3[1:0];

assign tmp_72_fu_1119_p1 = r_V_50_1_fu_1110_p2[7:0];

assign tmp_73_fu_1123_p1 = grp_fu_1255_p3[7:0];

assign tmp_74_fu_1140_p1 = r_V_50_1_2_fu_1135_p2[7:0];

assign tmp_75_fu_1028_p1 = r_V_50_2_fu_1023_p2[7:0];

assign tmp_76_fu_1041_p1 = r_V_50_2_1_fu_1036_p2[7:0];

assign tmp_7_fu_420_p2 = ($signed(9'd511) + $signed(t_V_cast_fu_354_p1));

assign tmp_i_i_fu_1210_p2 = (p_Result_s_reg_1500 ^ 1'd1);

assign tmp_s_fu_370_p2 = ((t_V_reg_308 < 8'd225) ? 1'b1 : 1'b0);

assign x_fu_786_p3 = ((sel_tmp8_fu_780_p2[0:0] === 1'b1) ? p_p2_i_i_cast1_fu_736_p1 : sel_tmp_cast_fu_764_p1);

assign y_fu_556_p3 = ((or_cond_i496_i_fu_452_p2[0:0] === 1'b1) ? tmp_42_cast_fu_426_p2 : p_p2_i497_i_p_assign_8_fu_548_p3);

always @ (posedge ap_clk) begin
    tmp_369_1_2_cast_reg_1354[11:4] <= 8'b00000000;
    tmp_369_2_1_cast_reg_1364[10:3] <= 8'b00000000;
end

endmodule //Filter2D
