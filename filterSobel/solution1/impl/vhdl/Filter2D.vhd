-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_E3 : STD_LOGIC_VECTOR (7 downto 0) := "11100011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_E1 : STD_LOGIC_VECTOR (7 downto 0) := "11100001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_E1 : STD_LOGIC_VECTOR (8 downto 0) := "011100001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";
    constant ap_const_lv9_1FD : STD_LOGIC_VECTOR (8 downto 0) := "111111101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv10_1C0 : STD_LOGIC_VECTOR (9 downto 0) := "0111000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond460_i_reg_1422 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1431 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1387 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1378 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal or_cond_i_reg_1465 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1465_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_319 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_369_0_1_cast_fu_330_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_0_1_cast_reg_1339 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_0_2_cast_fu_334_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_0_2_cast_reg_1344 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_1_cast_fu_338_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_369_1_cast_reg_1349 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_369_1_2_cast_fu_342_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_369_1_2_cast_reg_1354 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_369_2_cast_fu_346_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_2_cast_reg_1359 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_369_2_1_cast_fu_350_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_369_2_1_cast_reg_1364 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond461_i_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_364_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_V_reg_1373 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_284_0_not_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_284_0_not_reg_1382 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1392 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_328_1_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_328_1_reg_1396 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1400 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_assign_10_0_t_fu_564_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_0_t_reg_1407 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_fu_602_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_reg_1412 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_fu_640_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_reg_1417 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond460_i_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op159_read_state4 : BOOLEAN;
    signal ap_predicate_op170_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond460_i_reg_1422_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_656_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_798_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_69_reg_1435 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1440 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1447 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_addr_reg_1453 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_addr_reg_1459 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond_i_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1465_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal src_kernel_win_0_va_24_fu_964_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_1469 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_fu_982_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_reg_1475 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1248_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_V_0_1_reg_1480 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_75_fu_1028_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_reg_1485 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_reg_1485_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_1059_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp4_reg_1490 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp8_fu_1065_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_reg_1495 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_reg_1495_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_reg_1500 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_1173_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_reg_1506 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_reg_1511 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_308 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_22_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_fu_946_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_18_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_854_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_14_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_15_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_16_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_873_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_17_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_18_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_892_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_382_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_V_cast_fu_354_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_52_fu_416_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_420_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_53_fu_432_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_466_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_p2_i497_i_fu_472_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_55_fu_480_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_6_1_fu_496_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_assign_6_2_fu_522_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_fu_490_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i496_i_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_cast_fu_426_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_p2_i497_i_p_assign_8_fu_548_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_fu_556_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_58_fu_518_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_57_fu_510_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_576_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_63_fu_582_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_fu_502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_586_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_570_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_594_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_544_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_fu_536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_614_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_65_fu_620_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_fu_528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_624_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_608_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_33_fu_632_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_66_fu_662_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_V_2_cast_fu_646_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ImagLoc_x_fu_678_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_67_fu_688_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_714_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_722_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_p2_i_i_fu_728_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_p2_i_i_cast_fu_740_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ImagLoc_x_cast_fu_684_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_assign_2_fu_750_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_assign_3_fu_756_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_18_not_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast1_fu_736_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sel_tmp_cast_fu_764_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_fu_786_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_cast_fu_794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp2_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_3_t_fu_837_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_842_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_861_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_880_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_935_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_953_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_971_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_cast_fu_1001_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_s_fu_1005_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_50_2_fu_1023_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_50_2_fu_1023_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_50_2_fu_1023_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_50_2_1_fu_1036_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_50_2_1_fu_1036_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_50_2_1_fu_1036_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_370_2_2_cast_cas_fu_1045_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp5_fu_1049_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp5_cast_fu_1055_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_76_fu_1041_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1255_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_50_1_fu_1110_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_50_1_fu_1110_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_50_1_fu_1110_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_370_1_cast_cast_fu_1115_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sum_V_0_2_cast_fu_1103_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_50_1_2_fu_1135_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_50_1_2_fu_1135_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_50_1_2_fu_1135_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_73_fu_1123_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_fu_1119_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_V_1_1_fu_1126_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp3_fu_1150_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp4_cast_fu_1156_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_fu_1159_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_38_fu_1144_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_fu_1140_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp7_fu_1201_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal not_i_i_fu_1215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_fu_1226_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_1205_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1248_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1248_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1255_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1255_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_123 : BOOLEAN;
    signal ap_enable_state3_pp0_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_149 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op164_store_state4 : BOOLEAN;
    signal ap_enable_operation_164 : BOOLEAN;
    signal ap_predicate_op171_store_state4 : BOOLEAN;
    signal ap_enable_operation_171 : BOOLEAN;
    signal ap_enable_operation_125 : BOOLEAN;
    signal ap_enable_operation_153 : BOOLEAN;
    signal ap_predicate_op162_store_state4 : BOOLEAN;
    signal ap_enable_operation_162 : BOOLEAN;
    signal ap_predicate_op169_store_state4 : BOOLEAN;
    signal ap_enable_operation_169 : BOOLEAN;
    signal ap_enable_operation_127 : BOOLEAN;
    signal ap_enable_operation_156 : BOOLEAN;
    signal ap_predicate_op160_store_state4 : BOOLEAN;
    signal ap_enable_operation_160 : BOOLEAN;
    signal ap_predicate_op168_store_state4 : BOOLEAN;
    signal ap_enable_operation_168 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1248_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1255_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_50_1_2_fu_1135_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_50_1_fu_1110_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_50_2_1_fu_1036_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_50_2_fu_1023_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_condition_969 : BOOLEAN;

    component image_filter_mux_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component image_filter_mac_pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component image_filter_mac_qcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter2D_1_k_buf_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 225,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    image_filter_mux_hbi_U54 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_170,
        din1 => right_border_buf_0_14_fu_174,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_837_p2,
        dout => tmp_23_fu_842_p5);

    image_filter_mux_hbi_U55 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_16_fu_182,
        din1 => right_border_buf_0_17_fu_186,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_837_p2,
        dout => tmp_24_fu_861_p5);

    image_filter_mux_hbi_U56 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_18_fu_190,
        din1 => right_border_buf_0_15_fu_178,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_837_p2,
        dout => tmp_25_fu_880_p5);

    image_filter_mux_hbi_U57 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_854_p3,
        din1 => col_buf_0_val_1_0_fu_873_p3,
        din2 => col_buf_0_val_2_0_fu_892_p3,
        din3 => row_assign_10_0_t_reg_1407,
        dout => tmp_26_fu_935_p5);

    image_filter_mux_hbi_U58 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_854_p3,
        din1 => col_buf_0_val_1_0_fu_873_p3,
        din2 => col_buf_0_val_2_0_fu_892_p3,
        din3 => row_assign_10_1_t_reg_1412,
        dout => tmp_30_fu_953_p5);

    image_filter_mux_hbi_U59 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_854_p3,
        din1 => col_buf_0_val_1_0_fu_873_p3,
        din2 => col_buf_0_val_2_0_fu_892_p3,
        din3 => row_assign_10_2_t_reg_1417,
        dout => tmp_34_fu_971_p5);

    image_filter_mac_pcA_U60 : component image_filter_mac_pcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1248_p0,
        din1 => grp_fu_1248_p1,
        din2 => r_V_s_fu_1005_p2,
        dout => grp_fu_1248_p3);

    image_filter_mac_qcK_U61 : component image_filter_mac_qcK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1255_p0,
        din1 => grp_fu_1255_p1,
        din2 => sum_V_0_1_reg_1480,
        dout => grp_fu_1255_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond460_i_fu_650_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond461_i_fu_358_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((exitcond461_i_fu_358_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_650_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_319 <= j_V_fu_656_p2;
            elsif (((exitcond461_i_fu_358_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_319 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    t_V_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                t_V_reg_308 <= i_V_reg_1373;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_308 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_fu_650_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1440 <= brmerge_fu_802_p2;
                k_buf_0_val_3_addr_reg_1447 <= tmp_22_fu_807_p1(8 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1453 <= tmp_22_fu_807_p1(8 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1459 <= tmp_22_fu_807_p1(8 - 1 downto 0);
                or_cond_i_i_reg_1431 <= or_cond_i_i_fu_708_p2;
                or_cond_i_reg_1465 <= or_cond_i_fu_814_p2;
                tmp_69_reg_1435 <= tmp_69_fu_798_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond460_i_reg_1422 <= exitcond460_i_fu_650_p2;
                exitcond460_i_reg_1422_pp0_iter1_reg <= exitcond460_i_reg_1422;
                or_cond_i_reg_1465_pp0_iter1_reg <= or_cond_i_reg_1465;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1373 <= i_V_fu_364_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond461_i_fu_358_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1387 <= icmp_fu_392_p2;
                row_assign_10_0_t_reg_1407 <= row_assign_10_0_t_fu_564_p2;
                row_assign_10_1_t_reg_1412 <= row_assign_10_1_t_fu_602_p2;
                row_assign_10_2_t_reg_1417 <= row_assign_10_2_t_fu_640_p2;
                tmp_284_0_not_reg_1382 <= tmp_284_0_not_fu_376_p2;
                tmp_2_reg_1392 <= tmp_2_fu_398_p2;
                tmp_328_1_reg_1396 <= tmp_328_1_fu_404_p2;
                tmp_3_reg_1400 <= tmp_3_fu_410_p2;
                tmp_s_reg_1378 <= tmp_s_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                or_cond_i_reg_1465_pp0_iter2_reg <= or_cond_i_reg_1465_pp0_iter1_reg;
                tmp8_reg_1495_pp0_iter2_reg <= tmp8_reg_1495;
                tmp_75_reg_1485_pp0_iter2_reg <= tmp_75_reg_1485;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1465_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_s_reg_1500 <= p_Val2_s_fu_1159_p2(11 downto 11);
                tmp6_reg_1506 <= tmp6_fu_1173_p2;
                tmp_39_reg_1511 <= p_Val2_s_fu_1159_p2(11 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_14_fu_174 <= right_border_buf_0_s_fu_170;
                right_border_buf_0_15_fu_178 <= right_border_buf_0_18_fu_190;
                right_border_buf_0_16_fu_182 <= col_buf_0_val_1_0_fu_873_p3;
                right_border_buf_0_17_fu_186 <= right_border_buf_0_16_fu_182;
                right_border_buf_0_18_fu_190 <= col_buf_0_val_2_0_fu_892_p3;
                right_border_buf_0_s_fu_170 <= col_buf_0_val_0_0_fu_854_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_18_fu_150 <= src_kernel_win_0_va_fu_146;
                src_kernel_win_0_va_21_fu_162 <= src_kernel_win_0_va_25_fu_982_p3;
                src_kernel_win_0_va_22_fu_166 <= src_kernel_win_0_va_21_fu_162;
                src_kernel_win_0_va_fu_146 <= src_kernel_win_0_va_23_fu_946_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1422_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_19_fu_154 <= src_kernel_win_0_va_24_reg_1469;
                src_kernel_win_0_va_20_fu_158 <= src_kernel_win_0_va_19_fu_154;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_24_reg_1469 <= src_kernel_win_0_va_24_fu_964_p3;
                src_kernel_win_0_va_25_reg_1475 <= src_kernel_win_0_va_25_fu_982_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1465 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_0_1_reg_1480 <= grp_fu_1248_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1465 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp4_reg_1490 <= tmp4_fu_1059_p2;
                tmp8_reg_1495 <= tmp8_fu_1065_p2;
                tmp_75_reg_1485 <= tmp_75_fu_1028_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_369_0_1_cast_reg_1339 <= tmp_369_0_1_cast_fu_330_p1;
                tmp_369_0_2_cast_reg_1344 <= tmp_369_0_2_cast_fu_334_p1;
                    tmp_369_1_2_cast_reg_1354(3 downto 0) <= tmp_369_1_2_cast_fu_342_p1(3 downto 0);
                tmp_369_1_cast_reg_1349 <= tmp_369_1_cast_fu_338_p1;
                    tmp_369_2_1_cast_reg_1364(2 downto 0) <= tmp_369_2_1_cast_fu_350_p1(2 downto 0);
                tmp_369_2_cast_reg_1359 <= tmp_369_2_cast_fu_346_p1;
            end if;
        end if;
    end process;
    tmp_369_1_2_cast_reg_1354(11 downto 4) <= "00000000";
    tmp_369_2_1_cast_reg_1364(10 downto 3) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, exitcond461_i_fu_358_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond461_i_fu_358_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        ImagLoc_x_cast_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_fu_678_p2),10));

    ImagLoc_x_fu_678_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(t_V_2_cast_fu_646_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, or_cond_i_reg_1465_pp0_iter2_reg, ap_predicate_op159_read_state4, ap_predicate_op170_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1465_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op159_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, or_cond_i_reg_1465_pp0_iter2_reg, ap_predicate_op159_read_state4, ap_predicate_op170_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1465_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op159_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, or_cond_i_reg_1465_pp0_iter2_reg, ap_predicate_op159_read_state4, ap_predicate_op170_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1465_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op159_read_state4 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op159_read_state4, ap_predicate_op170_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op159_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter3_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1465_pp0_iter2_reg)
    begin
                ap_block_state6_pp0_stage0_iter3 <= ((or_cond_i_reg_1465_pp0_iter2_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_969_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond460_i_reg_1422, or_cond_i_i_reg_1431)
    begin
                ap_condition_969 <= ((or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond461_i_fu_358_p2, ap_CS_fsm_state2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond461_i_fu_358_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_123_assign_proc : process(exitcond460_i_fu_650_p2)
    begin
                ap_enable_operation_123 <= (exitcond460_i_fu_650_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_125_assign_proc : process(exitcond460_i_fu_650_p2)
    begin
                ap_enable_operation_125 <= (exitcond460_i_fu_650_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_127_assign_proc : process(exitcond460_i_fu_650_p2)
    begin
                ap_enable_operation_127 <= (exitcond460_i_fu_650_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_149_assign_proc : process(exitcond460_i_reg_1422)
    begin
                ap_enable_operation_149 <= (exitcond460_i_reg_1422 = ap_const_lv1_0);
    end process;


    ap_enable_operation_153_assign_proc : process(exitcond460_i_reg_1422)
    begin
                ap_enable_operation_153 <= (exitcond460_i_reg_1422 = ap_const_lv1_0);
    end process;


    ap_enable_operation_156_assign_proc : process(exitcond460_i_reg_1422)
    begin
                ap_enable_operation_156 <= (exitcond460_i_reg_1422 = ap_const_lv1_0);
    end process;


    ap_enable_operation_160_assign_proc : process(ap_predicate_op160_store_state4)
    begin
                ap_enable_operation_160 <= (ap_predicate_op160_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_162_assign_proc : process(ap_predicate_op162_store_state4)
    begin
                ap_enable_operation_162 <= (ap_predicate_op162_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_164_assign_proc : process(ap_predicate_op164_store_state4)
    begin
                ap_enable_operation_164 <= (ap_predicate_op164_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_168_assign_proc : process(ap_predicate_op168_store_state4)
    begin
                ap_enable_operation_168 <= (ap_predicate_op168_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_169_assign_proc : process(ap_predicate_op169_store_state4)
    begin
                ap_enable_operation_169 <= (ap_predicate_op169_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_171_assign_proc : process(ap_predicate_op171_store_state4)
    begin
                ap_enable_operation_171 <= (ap_predicate_op171_store_state4 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state3_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
                ap_enable_state3_pp0_iter0_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op159_read_state4_assign_proc : process(exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387)
    begin
                ap_predicate_op159_read_state4 <= ((or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0));
    end process;


    ap_predicate_op160_store_state4_assign_proc : process(exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_2_reg_1392)
    begin
                ap_predicate_op160_store_state4 <= ((tmp_2_reg_1392 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0));
    end process;


    ap_predicate_op162_store_state4_assign_proc : process(exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_328_1_reg_1396)
    begin
                ap_predicate_op162_store_state4 <= ((tmp_328_1_reg_1396 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0));
    end process;


    ap_predicate_op164_store_state4_assign_proc : process(exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_2_reg_1392)
    begin
                ap_predicate_op164_store_state4 <= ((tmp_2_reg_1392 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0));
    end process;


    ap_predicate_op168_store_state4_assign_proc : process(exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378)
    begin
                ap_predicate_op168_store_state4 <= ((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0));
    end process;


    ap_predicate_op169_store_state4_assign_proc : process(exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378)
    begin
                ap_predicate_op169_store_state4 <= ((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0));
    end process;


    ap_predicate_op170_read_state4_assign_proc : process(exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378)
    begin
                ap_predicate_op170_read_state4 <= ((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0));
    end process;


    ap_predicate_op171_store_state4_assign_proc : process(exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378)
    begin
                ap_predicate_op171_store_state4 <= ((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond461_i_fu_358_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond461_i_fu_358_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_802_p2 <= (tmp_284_0_not_reg_1382 or tmp_18_fu_702_p2);
    col_assign_3_t_fu_837_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(tmp_69_reg_1435));
        col_assign_cast_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_fu_786_p3),32));

    col_buf_0_val_0_0_fu_854_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1440(0) = '1') else 
        tmp_23_fu_842_p5;
    col_buf_0_val_1_0_fu_873_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1440(0) = '1') else 
        tmp_24_fu_861_p5;
    col_buf_0_val_2_0_fu_892_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1440(0) = '1') else 
        tmp_25_fu_880_p5;
    exitcond460_i_fu_650_p2 <= "1" when (t_V_2_reg_319 = ap_const_lv8_E3) else "0";
    exitcond461_i_fu_358_p2 <= "1" when (t_V_reg_308 = ap_const_lv8_E3) else "0";
    grp_fu_1248_p0 <= tmp_369_0_1_cast_reg_1339(2 - 1 downto 0);
    grp_fu_1248_p1 <= grp_fu_1248_p10(8 - 1 downto 0);
    grp_fu_1248_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_21_fu_162),10));
    grp_fu_1255_p0 <= tmp_369_0_2_cast_reg_1344(2 - 1 downto 0);
    grp_fu_1255_p1 <= grp_fu_1255_p10(8 - 1 downto 0);
    grp_fu_1255_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_25_reg_1475),10));
    i_V_fu_364_p2 <= std_logic_vector(unsigned(t_V_reg_308) + unsigned(ap_const_lv8_1));
    icmp2_fu_672_p2 <= "0" when (tmp_66_fu_662_p4 = ap_const_lv7_0) else "1";
    icmp_fu_392_p2 <= "0" when (tmp_51_fu_382_p4 = ap_const_lv7_0) else "1";
    j_V_fu_656_p2 <= std_logic_vector(unsigned(t_V_2_reg_319) + unsigned(ap_const_lv8_1));
    k_buf_0_val_3_address0 <= tmp_22_fu_807_p1(8 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1447;

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378, tmp_2_reg_1392, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1392 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378, tmp_2_reg_1392, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1392 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_22_fu_807_p1(8 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1453;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378, tmp_328_1_reg_1396, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_328_1_reg_1396 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1387, tmp_s_reg_1378, tmp_328_1_reg_1396, k_buf_0_val_3_q0, ap_condition_969)
    begin
        if ((ap_const_boolean_1 = ap_condition_969)) then
            if (((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (((tmp_328_1_reg_1396 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378, tmp_328_1_reg_1396, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_328_1_reg_1396 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_22_fu_807_p1(8 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1459;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378, tmp_2_reg_1392, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1392 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1387, tmp_s_reg_1378, tmp_2_reg_1392, k_buf_0_val_4_q0, ap_condition_969)
    begin
        if ((ap_const_boolean_1 = ap_condition_969)) then
            if (((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (((tmp_2_reg_1392 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378, tmp_2_reg_1392, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_2_reg_1392 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_fu_1215_p2 <= "0" when (tmp_39_reg_1511 = ap_const_lv4_0) else "1";
    or_cond_i496_i_fu_452_p2 <= (tmp_10_fu_446_p2 and rev_fu_440_p2);
    or_cond_i_fu_814_p2 <= (icmp_reg_1387 and icmp2_fu_672_p2);
    or_cond_i_i_fu_708_p2 <= (tmp_18_fu_702_p2 and rev3_fu_696_p2);
    overflow_fu_1220_p2 <= (tmp_i_i_fu_1210_p2 and not_i_i_fu_1215_p2);
    p_Val2_1_fu_1205_p2 <= std_logic_vector(unsigned(tmp6_reg_1506) + unsigned(tmp7_fu_1201_p2));
    p_Val2_s_fu_1159_p2 <= std_logic_vector(unsigned(tmp3_fu_1150_p2) + unsigned(tmp4_cast_fu_1156_p1));
    p_assign_1_fu_722_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) - unsigned(t_V_2_cast_fu_646_p1));
    p_assign_2_fu_750_p2 <= std_logic_vector(unsigned(ap_const_lv10_1C0) - unsigned(p_p2_i_i_cast_fu_740_p1));
    p_assign_3_fu_756_p3 <= 
        ImagLoc_x_cast_fu_684_p1 when (or_cond_i_i_fu_708_p2(0) = '1') else 
        p_assign_2_fu_750_p2;
    p_assign_6_1_fu_496_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) + signed(t_V_cast_fu_354_p1));
    p_assign_6_2_fu_522_p2 <= std_logic_vector(signed(ap_const_lv9_1FD) + signed(t_V_cast_fu_354_p1));
    p_assign_7_fu_466_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) - unsigned(t_V_cast_fu_354_p1));
    p_assign_8_fu_490_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(tmp_55_fu_480_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, or_cond_i_reg_1465_pp0_iter2_reg)
    begin
        if (((or_cond_i_reg_1465_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_mux_i_i_cast_fu_1226_p3 when (tmp_1_i_i_fu_1234_p2(0) = '1') else 
        p_Val2_1_fu_1205_p2;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, or_cond_i_reg_1465_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1465_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_fu_1226_p3 <= 
        ap_const_lv8_FF when (tmp_i_i_fu_1210_p2(0) = '1') else 
        ap_const_lv8_0;
    p_p2_i497_i_fu_472_p3 <= 
        p_assign_7_fu_466_p2 when (tmp_54_fu_458_p3(0) = '1') else 
        tmp_7_fu_420_p2;
    p_p2_i497_i_p_assign_8_fu_548_p3 <= 
        tmp_55_fu_480_p1 when (tmp_13_fu_484_p2(0) = '1') else 
        p_assign_8_fu_490_p2;
        p_p2_i_i_cast1_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_728_p3),11));

        p_p2_i_i_cast_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_728_p3),10));

    p_p2_i_i_fu_728_p3 <= 
        p_assign_1_fu_722_p2 when (tmp_68_fu_714_p3(0) = '1') else 
        ImagLoc_x_fu_678_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond460_i_reg_1422, or_cond_i_i_reg_1431, icmp_reg_1387, tmp_s_reg_1378)
    begin
        if ((((tmp_s_reg_1378 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_1) and (or_cond_i_i_reg_1431 = ap_const_lv1_1) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((or_cond_i_i_reg_1431 = ap_const_lv1_1) and (icmp_reg_1387 = ap_const_lv1_0) and (exitcond460_i_reg_1422 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op159_read_state4, ap_predicate_op170_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op170_read_state4 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op159_read_state4 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_0_cast_fu_1001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_22_fu_166),9));
    r_V_50_1_2_fu_1135_p0 <= tmp_369_1_2_cast_reg_1354(4 - 1 downto 0);
    r_V_50_1_2_fu_1135_p1 <= r_V_50_1_2_fu_1135_p10(8 - 1 downto 0);
    r_V_50_1_2_fu_1135_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_24_reg_1469),12));
    r_V_50_1_2_fu_1135_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_50_1_2_fu_1135_p0) * unsigned(r_V_50_1_2_fu_1135_p1), 12));
    r_V_50_1_fu_1110_p0 <= tmp_369_1_cast_reg_1349(3 - 1 downto 0);
    r_V_50_1_fu_1110_p1 <= r_V_50_1_fu_1110_p10(8 - 1 downto 0);
    r_V_50_1_fu_1110_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_20_fu_158),11));
    r_V_50_1_fu_1110_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_50_1_fu_1110_p0) * signed('0' &r_V_50_1_fu_1110_p1))), 11));
    r_V_50_2_1_fu_1036_p0 <= tmp_369_2_1_cast_reg_1364(3 - 1 downto 0);
    r_V_50_2_1_fu_1036_p1 <= r_V_50_2_1_fu_1036_p10(8 - 1 downto 0);
    r_V_50_2_1_fu_1036_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_146),11));
    r_V_50_2_1_fu_1036_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_50_2_1_fu_1036_p0) * unsigned(r_V_50_2_1_fu_1036_p1), 11));
    r_V_50_2_fu_1023_p0 <= tmp_369_2_cast_reg_1359(2 - 1 downto 0);
    r_V_50_2_fu_1023_p1 <= r_V_50_2_fu_1023_p10(8 - 1 downto 0);
    r_V_50_2_fu_1023_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_18_fu_150),10));
    r_V_50_2_fu_1023_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_50_2_fu_1023_p0) * signed('0' &r_V_50_2_fu_1023_p1))), 10));
    r_V_s_fu_1005_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(r_V_0_cast_fu_1001_p1));
    rev3_fu_696_p2 <= (tmp_67_fu_688_p3 xor ap_const_lv1_1);
    rev_fu_440_p2 <= (tmp_53_fu_432_p3 xor ap_const_lv1_1);
    row_assign_10_0_t_fu_564_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(y_fu_556_p3));
    row_assign_10_1_t_fu_602_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(tmp_29_fu_594_p3));
    row_assign_10_2_t_fu_640_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(tmp_33_fu_632_p3));
    sel_tmp7_fu_774_p2 <= (tmp_67_fu_688_p3 or tmp_18_not_fu_768_p2);
    sel_tmp8_fu_780_p2 <= (tmp_20_fu_744_p2 and sel_tmp7_fu_774_p2);
    sel_tmp_cast_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_assign_3_fu_756_p3),11));
    src_kernel_win_0_va_23_fu_946_p3 <= 
        tmp_26_fu_935_p5 when (tmp_3_reg_1400(0) = '1') else 
        col_buf_0_val_0_0_fu_854_p3;
    src_kernel_win_0_va_24_fu_964_p3 <= 
        tmp_30_fu_953_p5 when (tmp_3_reg_1400(0) = '1') else 
        col_buf_0_val_1_0_fu_873_p3;
    src_kernel_win_0_va_25_fu_982_p3 <= 
        tmp_34_fu_971_p5 when (tmp_3_reg_1400(0) = '1') else 
        col_buf_0_val_2_0_fu_892_p3;
        sum_V_0_2_cast_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1255_p3),12));

    sum_V_1_1_fu_1126_p2 <= std_logic_vector(signed(tmp_370_1_cast_cast_fu_1115_p1) + signed(sum_V_0_2_cast_fu_1103_p1));
    t_V_2_cast_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_319),9));
    t_V_cast_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_308),9));
    tmp3_fu_1150_p2 <= std_logic_vector(unsigned(r_V_50_1_2_fu_1135_p2) + unsigned(sum_V_1_1_fu_1126_p2));
        tmp4_cast_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp4_reg_1490),12));

    tmp4_fu_1059_p2 <= std_logic_vector(unsigned(r_V_50_2_1_fu_1036_p2) + unsigned(tmp5_cast_fu_1055_p1));
        tmp5_cast_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp5_fu_1049_p2),11));

    tmp5_fu_1049_p2 <= std_logic_vector(unsigned(tmp_370_2_2_cast_cas_fu_1045_p1) + unsigned(r_V_50_2_fu_1023_p2));
    tmp6_fu_1173_p2 <= std_logic_vector(unsigned(tmp_38_fu_1144_p2) + unsigned(tmp_74_fu_1140_p1));
    tmp7_fu_1201_p2 <= std_logic_vector(unsigned(tmp_75_reg_1485_pp0_iter2_reg) + unsigned(tmp8_reg_1495_pp0_iter2_reg));
    tmp8_fu_1065_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_23_fu_946_p3) + unsigned(tmp_76_fu_1041_p1));
    tmp_10_fu_446_p2 <= "1" when (signed(tmp_7_fu_420_p2) < signed(ap_const_lv9_E1)) else "0";
    tmp_13_fu_484_p2 <= "1" when (signed(p_p2_i497_i_fu_472_p3) < signed(ap_const_lv9_E1)) else "0";
    tmp_18_fu_702_p2 <= "1" when (signed(ImagLoc_x_fu_678_p2) < signed(ap_const_lv9_E1)) else "0";
    tmp_18_not_fu_768_p2 <= (tmp_18_fu_702_p2 xor ap_const_lv1_1);
    tmp_1_i_i_fu_1234_p2 <= (p_Result_s_reg_1500 or overflow_fu_1220_p2);
    tmp_20_fu_744_p2 <= "1" when (signed(p_p2_i_i_fu_728_p3) < signed(ap_const_lv9_E1)) else "0";
    tmp_22_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_794_p1),64));
    tmp_27_fu_570_p2 <= (tmp_52_fu_416_p1 xor ap_const_lv2_2);
    tmp_284_0_not_fu_376_p2 <= (tmp_s_fu_370_p2 xor ap_const_lv1_1);
    tmp_29_fu_594_p3 <= 
        tmp_36_fu_586_p3 when (tmp_56_fu_502_p3(0) = '1') else 
        tmp_27_fu_570_p2;
    tmp_2_fu_398_p2 <= "1" when (t_V_reg_308 = ap_const_lv8_1) else "0";
    tmp_31_fu_608_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_52_fu_416_p1));
    tmp_328_1_fu_404_p2 <= "1" when (t_V_reg_308 = ap_const_lv8_0) else "0";
    tmp_33_fu_632_p3 <= 
        tmp_37_fu_624_p3 when (tmp_59_fu_528_p3(0) = '1') else 
        tmp_31_fu_608_p2;
        tmp_369_0_1_cast_fu_330_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        tmp_369_0_2_cast_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    tmp_369_1_2_cast_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        tmp_369_1_cast_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    tmp_369_2_1_cast_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        tmp_369_2_cast_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

    tmp_36_fu_586_p3 <= 
        tmp_62_fu_576_p2 when (tmp_57_fu_510_p3(0) = '1') else 
        tmp_63_fu_582_p1;
        tmp_370_1_cast_cast_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_50_1_fu_1110_p2),12));

    tmp_370_2_2_cast_cas_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_23_fu_946_p3),10));
    tmp_37_fu_624_p3 <= 
        tmp_64_fu_614_p2 when (tmp_60_fu_536_p3(0) = '1') else 
        tmp_65_fu_620_p1;
    tmp_38_fu_1144_p2 <= std_logic_vector(unsigned(tmp_73_fu_1123_p1) + unsigned(tmp_72_fu_1119_p1));
    tmp_3_fu_410_p2 <= "1" when (unsigned(t_V_reg_308) > unsigned(ap_const_lv8_E1)) else "0";
    tmp_42_cast_fu_426_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_52_fu_416_p1));
    tmp_51_fu_382_p4 <= t_V_reg_308(7 downto 1);
    tmp_52_fu_416_p1 <= t_V_reg_308(2 - 1 downto 0);
    tmp_53_fu_432_p3 <= tmp_7_fu_420_p2(8 downto 8);
    tmp_54_fu_458_p3 <= tmp_7_fu_420_p2(8 downto 8);
    tmp_55_fu_480_p1 <= p_p2_i497_i_fu_472_p3(2 - 1 downto 0);
    tmp_56_fu_502_p3 <= p_assign_6_1_fu_496_p2(8 downto 8);
    tmp_57_fu_510_p3 <= p_assign_6_1_fu_496_p2(8 downto 8);
    tmp_58_fu_518_p1 <= t_V_reg_308(2 - 1 downto 0);
    tmp_59_fu_528_p3 <= p_assign_6_2_fu_522_p2(8 downto 8);
    tmp_60_fu_536_p3 <= p_assign_6_2_fu_522_p2(8 downto 8);
    tmp_61_fu_544_p1 <= t_V_reg_308(2 - 1 downto 0);
    tmp_62_fu_576_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_58_fu_518_p1));
    tmp_63_fu_582_p1 <= p_assign_6_1_fu_496_p2(2 - 1 downto 0);
    tmp_64_fu_614_p2 <= (tmp_61_fu_544_p1 xor ap_const_lv2_3);
    tmp_65_fu_620_p1 <= p_assign_6_2_fu_522_p2(2 - 1 downto 0);
    tmp_66_fu_662_p4 <= t_V_2_reg_319(7 downto 1);
    tmp_67_fu_688_p3 <= ImagLoc_x_fu_678_p2(8 downto 8);
    tmp_68_fu_714_p3 <= ImagLoc_x_fu_678_p2(8 downto 8);
    tmp_69_fu_798_p1 <= x_fu_786_p3(2 - 1 downto 0);
    tmp_72_fu_1119_p1 <= r_V_50_1_fu_1110_p2(8 - 1 downto 0);
    tmp_73_fu_1123_p1 <= grp_fu_1255_p3(8 - 1 downto 0);
    tmp_74_fu_1140_p1 <= r_V_50_1_2_fu_1135_p2(8 - 1 downto 0);
    tmp_75_fu_1028_p1 <= r_V_50_2_fu_1023_p2(8 - 1 downto 0);
    tmp_76_fu_1041_p1 <= r_V_50_2_1_fu_1036_p2(8 - 1 downto 0);
    tmp_7_fu_420_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(t_V_cast_fu_354_p1));
    tmp_i_i_fu_1210_p2 <= (p_Result_s_reg_1500 xor ap_const_lv1_1);
    tmp_s_fu_370_p2 <= "1" when (unsigned(t_V_reg_308) < unsigned(ap_const_lv8_E1)) else "0";
    x_fu_786_p3 <= 
        p_p2_i_i_cast1_fu_736_p1 when (sel_tmp8_fu_780_p2(0) = '1') else 
        sel_tmp_cast_fu_764_p1;
    y_fu_556_p3 <= 
        tmp_42_cast_fu_426_p2 when (or_cond_i496_i_fu_452_p2(0) = '1') else 
        p_p2_i497_i_p_assign_8_fu_548_p3;
end behav;
